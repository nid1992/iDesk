{"version":3,"sources":["ibslogo.svg","components/NavItem.jsx","actions/action_index.jsx","constants/action_type.jsx","components/CustomizedDialogs.jsx","components/EmployeeList.jsx","components/SecurityList.jsx","components/SimpleDashboardTabs.jsx","App.jsx","reducers/reducer_index.jsx","store/store_index.jsx","components/Edit.jsx","components/Create.jsx","components/Show.jsx","components/ContactImage.jsx","components/Users.jsx","components/Login.jsx","components/Security.jsx","serviceWorker.jsx","components/SecurityEdit.jsx","index.jsx","error.ico","loading.gif"],"names":["module","exports","NavItem","props","onClick","e","console","log","localStorage","removeItem","history","push","state","open","url","this","style","maxWidth","AppBar","position","backgroundColor","Toolbar","Button","startIcon","color","onButtonClick","getItem","marginLeft","marginRight","Tooltip","title","placement","IconButton","aria-label","Component","withRouter","clearContact","payload","type","showContact","showImage","loadContacts","changeContact","updateContact","DialogTitle","withStyles","theme","root","margin","padding","spacing","closeButton","right","top","palette","grey","children","classes","onClose","other","disableTypography","className","Typography","variant","DialogContent","MuiDialogContent","MuiDialogActions","EditLinkButton","to","id","CustomizedDialogs","React","useState","setOpen","handleClose","Dialog","fullWidth","aria-labelledby","dividers","gutterBottom","contact","name","firstName","address","department","buildingNo","phone","email","uri","axios","delete","then","result","refreshEmployee","bind","SearchBar","Search","ClearSearchButton","ConnectedList1","contacts","addLinkFormatterForButton","get","response","data","cell","row","employeeId","columns","dataField","text","sort","formatter","value","lastName","defaultSorted","order","keyField","search","searchProps","baseProps","bordered","inverse","hover","condensed","striped","responsive","pagination","paginationFactory","headerClasses","EmployeeList","connect","dispatch","bindActionCreators","actions","ConnectedSecurityList","SecurityList","TabPanel","index","role","hidden","Box","p","a11yProps","useStyles","makeStyles","flexGrow","background","paper","SimpleTabs","setValue","Tabs","onChange","event","newValue","Tab","label","contactsCount","refreshData","App","userName","setState","pathname","initialState","showContactForm","showDeleteButton","imageUrl","city","rootReducer","action","tempState","contactId","field","index_of_contact","findIndex","_id","updated_contact","store","createStore","EditContact","currentContact","onSubmit","preventDefault","laptopId","employeeImage","put","selectedFile","match","params","htmlFor","target","placeholder","for","Edit","CreateContact","loading","post","failure","success","isFirstNameValid","isLastNameValid","isAddressValid","isLaptopValid","idError","firstNameError","lastNameError","addressNameError","isDepartmentValid","departmentError","phoneError","emailError","laptopError","submitDisabled","isEdit","undefined","employee","isDisabled","handleCloseSuccess","handleCloseFailure","nextState","isIdValid","nameRegex","isEmailValid","isPhoneValid","length","errorText","hintText","floatingLabelText","changeValue","onBlur","primary","disabled","aria-describedby","DialogContentText","src","errorLogo","alt","height","Modal","Create","ShowContact","contactImage","class","Show","Logo","onChangeContactImage","FormData","append","files","enctype","ContactImage","AddUsers","username","password","Users","Login","setItem","empId","toUpperCase","credentialError","usernameError","passwordError","isUsernameValid","isPasswordValid","indexOf","logo","DialogActions","Security","location","nameError","locationError","isNameValid","isLocationValid","align","Boolean","window","hostname","EditSecurity","SecurityEdit","ReactDOM","render","exact","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d0d4f521.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ibslogo.70ab30a9.svg\";","import React, { Component } from \"react\";\nimport \"./../App.css\";\nimport { withRouter } from 'react-router-dom'\nimport \"./NavItem.css\";\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport AddIcon from '@material-ui/icons/PersonAddOutlined';\nimport AddIconSecurity from '@material-ui/icons/SecurityOutlined';\nimport Home from '@material-ui/icons/Home';\nimport Exit from '@material-ui/icons/ExitToAppSharp';\n\n\nclass NavItem extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false\n        };\n    }\n\n    onClick = e => {\n        console.log(\"user is logging out\");\n        localStorage.removeItem(\"isAuthenticated\");\n        localStorage.removeItem(\"username\");\n        localStorage.removeItem(\"role\");\n        this.props.history.push(\"/login\");\n    };\n\n    onButtonClick(e, url) {\n        this.props.history.push(url);\n    }\n\n    render() {\n        return (\n            <div style={{maxWidth:'100%'}}>\n                <AppBar position=\"static\" style={{ backgroundColor: '#0d3c5c', maxWidth:'100%'}}>\n                    <Toolbar>\n                        <div style={{maxWidth:'100%'}}>\n                            <Button\n                                startIcon={<Home />}\n                                style={{color: \"white\", maxWidth:'100%'}}\n                                onClick={e => this.onButtonClick(e, '/')}\n                            >\n                                Dashboard\n                            </Button>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            {localStorage.getItem(\"role\") === \"admin\" ?\n                                <Button\n                                    color=\"default\"\n                                    startIcon={<AddIcon />}\n                                    style={{color: \"white\", maxWidth:'100%'}}\n                                    onClick={e => this.onButtonClick(e, '/create')}\n                                >\n                                    Add Employee\n                                </Button>\n                                : null    }\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            {localStorage.getItem(\"role\") === \"admin\" ?\n                                <Button\n                                    color=\"default\"\n                                    startIcon={<AddIconSecurity />}\n                                    style={{color: \"white\", maxWidth:'100%'}}\n                                    onClick={e => this.onButtonClick(e, '/security')}\n                                >\n                                    Add Security\n                                </Button>\n                                : null    }\n                        </div>\n                        <div style={{maxWidth:'100%', marginLeft: \"auto\", marginRight: \"0\"}}>\n                            <a> <AccountCircleIcon />{localStorage.getItem(\"username\")} </a>\n                            &nbsp;&nbsp;&nbsp;&nbsp;\n                            <Tooltip title=\"Sign Out\" placement=\"top\">\n                                <IconButton\n                                    aria-label=\"signout\"\n                                    onClick={this.onClick}\n                                    style={{color: \"white\"}}\n                                >\n                                    <Exit />\n                                </IconButton>\n                            </Tooltip>\n                        </div>\n                    </Toolbar>\n                </AppBar>\n            </div>\n\n        );\n    }\n}\n\nexport default withRouter(NavItem);\n","import { CLEAR_CONTACT } from \"../constants/action_type\";\nimport { SHOW_CONTACT } from \"../constants/action_type\";\nimport { LOAD_CONTACTS } from \"../constants/action_type\";\nimport { CHANGE_CONTACT } from \"../constants/action_type\";\nimport { UPDATE_CONTACT } from \"../constants/action_type\";\nimport { SHOW_IMAGE } from \"../constants/action_type\";\n\nexport const clearContact = payload => {\n  return { type: CLEAR_CONTACT, payload };\n};\n\nexport const showContact = payload => {\n  return { type: SHOW_CONTACT, payload };\n};\n\nexport const showImage = payload => {\n  return { type: SHOW_IMAGE, payload };\n};\n\nexport const loadContacts = payload => {\n  return { type: LOAD_CONTACTS, payload };\n};\n\nexport const changeContact = payload => {\n  return { type: CHANGE_CONTACT, payload };\n};\n\nexport const updateContact = payload => {\n  return { type: UPDATE_CONTACT, payload };\n};\n","export const CLEAR_CONTACT = \"CLEAR_CONTACT\";\nexport const SHOW_CONTACT = \"SHOW_CONTACT\";\nexport const CHANGE_CONTACT = \"CHANGE_CONTACT\";\nexport const UPDATE_CONTACT = \"UPDATE_CONTACT\";\nexport const LOAD_CONTACTS = \"LOAD_CONTACTS\";\nexport const SHOW_IMAGE = \"SHOW_IMAGE\";\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport {Link} from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst styles = (theme) => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(2),\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n    },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n    const { children, classes, onClose, ...other } = props;\n    return (\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\n            <Typography variant=\"h6\">{children}</Typography>\n            {onClose ? (\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n                    <CloseIcon />\n                </IconButton>\n            ) : null}\n        </MuiDialogTitle>\n    );\n});\n\nconst DialogContent = withStyles((theme) => ({\n    root: {\n        padding: theme.spacing(2),\n    },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(1),\n    },\n}))(MuiDialogActions);\n\n\nfunction componentDidMount() {\n\n}\n\nconst EditLinkButton =(props) =>{\n    if(props.type===\"employee\"){\n        return(<Link to={`/edit/${props.id}`} className=\"btn btn-success\">\n            Edit\n        </Link>);\n    } else {\n        return(<Link to={`/editsecu/${props.id}`} className=\"btn btn-success\">\n            Edit\n        </Link>);\n    }\n}\n\n\nexport default function CustomizedDialogs(props) {\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const deleteFun = (id) => {\n        console.log(id);\n        var uri;\n        if(props.type===\"employee\"){\n            uri = \"http://localhost:8081/employee/\";\n        }else{\n            uri = \"http://localhost:8081/securities/\";\n        }\n        axios.delete(uri + id).then(result => {\n            handleClose();\n            props.refreshEmployee();\n        });\n    }\n\n\n    /*const componentDidMount=() => {\n        axios.get(\"http://localhost:8081/contacts/\" + props.employeeId).then(response => {\n            let data = response.data;\n            let contact = {\n                id: data.id,\n                name: data.name,\n                address: data.address,\n                city: data.city,\n                phone: data.phone,\n                email: data.email,\n                contactImage: data.contactImage\n            };\n\n        });\n    }\n    componentDidMount()*/\n    return (\n        <div>\n            <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n                Action\n            </Button>\n            <Dialog fullWidth={true}\n                    maxWidth={\"md\"} className=\"paperWidthLg\" onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n                <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n                    Contact Details\n                </DialogTitle>\n                <DialogContent dividers>\n                    <Typography gutterBottom>\n\n                        <div className=\"container\">\n                            <div className=\"panel panel-default\">\n                                <div className=\"panel-heading\">\n                                    <h3 className=\"panel-title\">Contact Details</h3>\n                                </div>\n                                <div className=\"panel-body\">\n                                    <dl>\n                                        {/* <dd>\n                                            {this.props.imageUrl &&\n                                            <img className=\"contact-image\" src={this.props.imageUrl} alt=\"contact\"/>}\n                                        </dd>*/}\n                                        <dt>Name:</dt>\n                                        <dd>{props.contact.name}</dd>\n                                        <dd>{props.contact.firstName}</dd>\n                                        <dt>Address:</dt>\n                                        <dd>{props.contact.address}</dd>\n                                        <dt>Department:</dt>\n                                        <dd>{props.contact.department}</dd>\n                                        <dt>Department:</dt>\n                                        <dt>Building No:</dt>\n                                        <dd>{props.contact.buildingNo}</dd>\n                                        <dt>Phone Number:</dt>\n                                        <dd>{props.contact.phone}</dd>\n                                        <dt>Email Address:</dt>\n                                        <dd>{props.contact.email}</dd>\n                                    </dl>\n                                    <EditLinkButton id={props.contact.id} type={props.type} />\n                                   {/* <Link to={`/edit/${props.contact.id}`} className=\"btn btn-success\">\n                                        Edit\n                                    </Link>*/}\n                                    &nbsp;\n                                    <button onClick={deleteFun.bind(this, props.contact.id)}\n                                            className=\"btn btn-danger\">\n                                        Delete\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </Typography>\n\n                </DialogContent>\n\n            </Dialog>\n        </div>\n    );\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport * as actions from '../actions/action_index';\n// import '../../css/styles.css';\nimport { Link } from 'react-router-dom';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport axios from \"axios\";\nimport EmployeeDialogs from \"./EmployeeDialogs\";\nimport CustomizedDialogs from \"./CustomizedDialogs\";\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\nimport 'react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\n\nconst { SearchBar, ClearSearchButton } = Search;\n\nfunction mapStateToProps(state) {\n    return {\n        //employee: state.contacts,\n        contacts: state.contacts,\n    };\n};\n\nfunction addLinkFormatter(cell, row) {\n    console.log(cell, row)\n    return (\n        <section>\n            <Link to={`/show/${row.id}`}>\n                <img className=\"contact-icon\" src={`/file/${row.id}`} alt=\"\" /> {cell}\n            </Link>\n        </section>\n    )\n}\n\nclass ConnectedList1 extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            contacts: props.contacts\n        };\n        this.addLinkFormatterForButton = this.addLinkFormatterForButton.bind(this)\n    }\n\n    componentDidMount() {\n        axios.get(\"http://localhost:8081/employee\").then(response => {\n            this.props.loadContacts({\n                contacts: response.data\n            })\n        })\n    }\n\n    addLinkFormatterForButton(cell, row) {\n        console.log(cell, row)\n        return (\n            <section>\n                <CustomizedDialogs employeeId={row.id} contact={row} refreshEmployee={this.props.refreshEmployee} type={\"employee\"}/>\n\n            </section>\n        )\n    }\n\n\n    render() {\n        const columns = [{\n            dataField: 'employeeId',\n            text: 'Employee Id',\n            sort: true,\n        },{\n            dataField: 'firstName',\n            text: 'Employee Name',\n            formatter: (value, contacts) => {\n                return value + ' ' + contacts.lastName\n            },\n            sort: true,\n        }, {\n            dataField: 'department',\n            text: 'Department',\n            sort: true,\n        },\n            {\n                dataField: '_id',\n                text: 'Action',\n                formatter: this.addLinkFormatterForButton\n            }\n        ];\n\n        const defaultSorted = [{\n            dataField: 'employeeId',\n            order: 'asc'\n        }];\n\n        return (\n\n            <ToolkitProvider\n                keyField=\"employeeId\"\n                data={ this.props.contacts }\n                columns={ columns }\n                search\n            >\n                {\n                    props => (\n                        <div>\n                            <hr />\n                            <SearchBar { ...props.searchProps } />\n                            <ClearSearchButton { ...props.searchProps } />\n                            <hr />\n                            <BootstrapTable\n                                { ...props.baseProps }\n                                bordered={false}\n                                inverse\n                                hover\n                                condensed\n                                striped\n                                responsive\n                                pagination={ paginationFactory() }\n                                defaultSorted={ defaultSorted }\n                                headerClasses=\"header-class\"\n                            />\n                        </div>\n                    )\n                }\n            </ToolkitProvider>\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators(actions, dispatch);\n}\nconst EmployeeList = connect(mapStateToProps, mapDispatchToProps)(ConnectedList1);\nexport default EmployeeList;","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport * as actions from '../actions/action_index';\n// import '../../css/styles.css';\nimport { Link } from 'react-router-dom';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport axios from \"axios\";\nimport EmployeeDialogs from \"./EmployeeDialogs\";\nimport CustomizedDialogs from \"./CustomizedDialogs\";\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\nimport 'react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\n\nconst { SearchBar, ClearSearchButton } = Search;\n\nfunction mapStateToProps(state) {\n    return {\n        //employee: state.contacts,\n        contacts: state.contacts,\n    };\n};\n\n\n\nclass ConnectedSecurityList extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            contacts: props.contacts\n        };\n        this.addLinkFormatterForButton = this.addLinkFormatterForButton.bind(this)\n    }\n\n    componentDidMount() {\n        axios.get(\"http://localhost:8081/securities\").then(response => {\n            this.props.loadContacts({\n                contacts: response.data\n            })\n        })\n    }\n\n    addLinkFormatterForButton(cell, row) {\n        console.log(cell, row)\n        return (\n            <section>\n                <CustomizedDialogs employeeId={row.id} contact={row} refreshEmployee={this.props.refreshEmployee} type={\"security\"}/>\n\n            </section>\n        )\n    }\n\n\n    render() {\n        const columns = [{\n            dataField: 'id',\n            text: 'Security Id',\n            sort: true,\n        },{\n            dataField: 'name',\n            text: 'Name',\n            sort: true,\n        },\n            {\n                dataField: '_id',\n                text: 'Action',\n                formatter: this.addLinkFormatterForButton\n            }\n        ];\n\n        const defaultSorted = [{\n            dataField: 'employeeId',\n            order: 'asc'\n        }];\n\n        return (\n\n            <ToolkitProvider\n                keyField=\"employeeId\"\n                data={ this.props.contacts }\n                columns={ columns }\n                search\n            >\n                {\n                    props => (\n                        <div>\n                            <hr />\n                            <SearchBar { ...props.searchProps } />\n                            <ClearSearchButton { ...props.searchProps } />\n                            <hr />\n                            <BootstrapTable\n                                { ...props.baseProps }\n                                bordered={false}\n                                inverse\n                                hover\n                                condensed\n                                striped\n                                responsive\n                                pagination={ paginationFactory() }\n                                defaultSorted={ defaultSorted }\n                                headerClasses=\"header-class\"\n                            />\n                        </div>\n                    )\n                }\n            </ToolkitProvider>\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators(actions, dispatch);\n}\nconst SecurityList = connect(mapStateToProps, mapDispatchToProps)(ConnectedSecurityList);\nexport default SecurityList;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport EmployeeList from \"./EmployeeList\";\nimport SecurityList from \"./SecurityList\";\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={3}>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n    },\n}));\n\nexport default function SimpleTabs(props) {\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\n                    <Tab label=\"Employee List\" {...a11yProps(0)} />\n                    <Tab label=\"Securities List\" {...a11yProps(1)} />\n\n                </Tabs>\n            </AppBar>\n            <TabPanel value={value} index={0}>\n                <EmployeeList contacts={props.contacts}  contactsCount={props.contactsCount} refreshEmployee={props.refreshData}/>\n            </TabPanel>\n            <TabPanel value={value} index={1}>\n                <SecurityList contacts={props.contacts}  contactsCount={props.contactsCount} refreshEmployee={props.refreshData}/>\n            </TabPanel>\n\n        </div>\n    );\n}\n","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {Link, Redirect} from \"react-router-dom\";\nimport axios from \"axios\";\nimport ContactList from \"./components/ContactList\";\nimport NavItem from \"./components/NavItem\";\nimport EmployeeList from \"./components/EmployeeList\";\nimport SimpleTabs from \"./components/SimpleDashboardTabs\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      contacts: []\n    };\n    this.state ={\n        contactsCount : 0\n    }\n    this.userName = localStorage.getItem(\"username\");\n    this.refreshData = this.refreshData.bind(this)\n  }\n\n\n\n\n  refreshData(){\n    console.log(\"shshsh event\")\n    this.setState({\n      contactsCount: this.state.contactsCount+1\n\n    });\n  }\n\n  render() {\n\n    if(localStorage.getItem(\"isAuthenticated\") === null) {\n      return   <Redirect to={{\n        pathname: '/login'}\n      } />\n    } else {\n      return (<section>\n            <NavItem refreshEmployee={this.refreshData} />\n\n            <h2>Welcome {this.userName},</h2>\n            <SimpleTabs contacts={this.state.contacts}  contactsCount={this.state.contactsCount} refreshEmployee={this.refreshData}/>\n          </section>);\n    }\n  }\n}\n\nexport default App;\n","import { SHOW_CONTACT } from \"../constants/action_type\";\nimport { CHANGE_CONTACT } from \"../constants/action_type\";\nimport { UPDATE_CONTACT } from \"../constants/action_type\";\nimport { LOAD_CONTACTS } from \"../constants/action_type\";\nimport { CLEAR_CONTACT } from \"../constants/action_type\";\nimport { SHOW_IMAGE } from \"../constants/action_type\";\n\nconst initialState = {\n  contacts: [],\n  showContactForm: false,\n  showDeleteButton: false,\n  imageUrl: \"\",\n  contact: { id: \"\", name: \"\", address: \"\", city: \"\", phone: \"\", email: \"\" }\n};\n\nfunction rootReducer(state = initialState, action) {\n  let tempState = { ...state };\n\n  if (action.type === LOAD_CONTACTS) {\n    tempState.contacts = action.payload.contacts;\n    return tempState;\n  }\n\n  if (action.type === SHOW_CONTACT) {\n    tempState.contact = action.payload.contact;\n    tempState.imageUrl = `/file/${action.payload.contact.id}`;\n\n    return tempState;\n  }\n\n  if (action.type === SHOW_IMAGE) {\n    tempState.imageUrl = `/file/${action.payload.contactId}`;\n\n    return tempState;\n  }\n\n  if (action.type === CHANGE_CONTACT) {\n    tempState.contact = action.payload.contact;\n    tempState.contact[action.payload.field] = action.payload.value;\n    return tempState;\n  }\n\n  if (action.type === UPDATE_CONTACT) {\n    // tempState.contacts = action.payload.contacts;\n    // tempState.showContactForm = action.payload.showContactForm;\n    // return tempState;\n\n    var payload = action.payload;\n    var index_of_contact = payload.contacts.findIndex(data => data._id === payload.updated_contact._id);\n    tempState.contacts[index_of_contact] = payload.updated_contact;\n    tempState.showContactForm = action.payload.showContactForm;\n    return tempState;\n  }\n\n  if (action.type === CLEAR_CONTACT) {\n    tempState.contact = { id: \"\", name: \"\", address: \"\", city: \"\", phone: \"\", email: \"\" };\n    return tempState;\n  }\n\n  return tempState;\n}\n\nexport default rootReducer;\n","import { createStore } from \"redux\";\nimport rootReducer from \"../reducers/reducer_index\";\n\nconst store = createStore(rootReducer);\nexport default store;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { bindActionCreators } from \"redux\";\nimport * as actions from \"../actions/action_index\";\nimport { connect } from \"react-redux\";\nimport NavItem from \"./NavItem\";\n\nfunction mapStateToProps(state) {\n  return {\n    contact: state.contact,\n    imageUrl: state.imageUrl\n  };\n}\n\nclass EditContact extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      contact: {},\n      selectedFile: null\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:8081/employee/\" + this.props.match.params.id).then(response => {\n      this.props.showContact({\n        contact: response.data\n      });\n    });\n  }\n\n  onChange = (field, value) => {\n    let currentContact = { ...this.props.contact };\n\n    this.props.changeContact({\n      contact: currentContact,\n      field: field,\n      value: value\n    });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const {  employeeId, firstName, lastName, address, phone,email,role,laptopId, department, employeeImage } = this.props.contact;\n\n    axios.put(\"http://localhost:8081/employee/\" + this.props.contact.id, {employeeId, firstName, lastName, address, phone,email,role,laptopId, department, employeeImage}).then(result => {\n      this.props.clearContact();\n      this.props.history.push(\"/\" );\n    });\n  };\n\n  render() {\n    return (\n      <section>\n        <NavItem/>\n\n        <div className=\"container\">\n          <div className=\"panel panel-default\">\n            <div className=\"panel-heading\">\n              <h3 className=\"panel-title\">EDIT Contact</h3>\n            </div>\n            <div className=\"panel-body\">\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <label htmlFor=\"employeeId\">Employee Id</label>\n                  <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      name=\"employeeId\"\n                      value={this.props.contact.employeeId}\n                      onChange={event => this.onChange(\"employeeId\", event.target.value)}\n                      placeholder=\"Employee Id\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"firstName\">First Name</label>\n                  <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      name=\"firstName\"\n                      value={this.props.contact.firstName}\n                      onChange={event => this.onChange(\"firstName\", event.target.value)}\n                      placeholder=\"First Name\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"lastName\">Last Name</label>\n                  <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      name=\"lastName\"\n                      value={this.props.contact.lastName}\n                      onChange={event => this.onChange(\"lastName\", event.target.value)}\n                      placeholder=\"Last Name\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label for=\"title\">Address:</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"address\"\n                    value={this.props.contact.address}\n                    onChange={event => this.onChange(\"address\", event.target.value)}\n                    placeholder=\"Address\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label for=\"published_date\">Phone Number:</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"phone\"\n                    value={this.props.contact.phone}\n                    onChange={event => this.onChange(\"phone\", event.target.value)}\n                    placeholder=\"Phone Number\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"department\">Department</label>\n                  <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      name=\"department\"\n                      value={this.props.contact.department}\n                      onChange={event => this.onChange(\"department\", event.target.value)}\n                      placeholder=\"Department\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"laptopId\">Laptop Id</label>\n                  <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      name=\"laptopId\"\n                      value={this.props.contact.laptopId}\n                      onChange={event => this.onChange(\"laptopId\", event.target.value)}\n                      placeholder=\"Laptop Id\"\n                  />\n                </div>\n\n\n                <div className=\"form-group\">\n                  <label for=\"description\">Email:</label>\n                  <input\n                    type=\"email\"\n                    className=\"form-control\"\n                    name=\"email\"\n                    value={this.props.contact.email}\n                    onChange={event => this.onChange(\"email\", event.target.value)}\n                    placeholder=\"Email Address\"\n                  />\n                </div>\n\n                <button type=\"submit\" className=\"btn btn-info\">\n                  Update\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(actions, dispatch);\n};\n\nconst Edit = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EditContact);\nexport default Edit;\n","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport * as actions from \"../actions/action_index\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport NavItem from \"./NavItem\";\nimport MuiThemeProvider from \"material-ui/styles/MuiThemeProvider\";\nimport TextField from \"material-ui/TextField\";\nimport RaisedButton from \"material-ui/RaisedButton\";\nimport Dialog from \"@material-ui/core/Dialog/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions/DialogActions\";\nimport errorLogo from \"../error.ico\";\nimport Modal from \"@material-ui/core/Modal\";\nimport loading from \"../loading.gif\";\n\nfunction mapStateToProps(state) {\n  return {\n    contact: state.contact\n  };\n}\n\nclass CreateContact extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      employeeId: \"\",\n      isFirstNameValid:\"\",\n      isLastNameValid:\"\",\n      isAddressValid:\"\",\n      isLaptopValid:\"\",\n      firstName: \"\",\n      lastName:\"\",\n      phone: \"\",\n      email: \"\",\n      address: \"\",\n      laptopId:\"\",\n      idError: \"\",\n      firstNameError: \"\",\n      lastNameError: \"\",\n      addressNameError: \"\",\n      isDepartmentValid:\"\",\n      departmentError:\"\",\n      department:\"\",\n      phoneError: \"\",\n      emailError: \"\",\n      laptopError:\"\",\n      submitDisabled: true,\n      success: false,\n      failure: false,\n      loading: false\n    };\n    this.isEdit = false;\n    if(props.employee!==undefined && props.employee!==null){\n      this.isEdit = true;\n      this.state.firstName=props.employee.firstName;\n      this.state.lastName=props.employee.lastName;\n      this.state.employeeId=props.employee.employeeId;\n      this.state.phone=props.employee.phone;\n      this.state.email=props.employee.email;\n      this.state.address=props.employee.address;\n      this.state.laptopId=props.employee.laptopId;\n      this.state.department=props.employee.department;\n    }\n    this.isDisabled = this.isDisabled.bind(this);\n    this.handleCloseSuccess = this.handleCloseSuccess.bind(this);\n    this.handleCloseFailure = this.handleCloseFailure.bind(this);\n  }\n\n  //For the pop up\n  handleCloseSuccess() {\n    this.setState({success: false});\n    this.props.handleClose();\n   // this.props.history.push(\"/security\");\n  }\n\n  handleCloseFailure() {\n    this.setState({failure: false});\n  }\n\n  componentDidMount() {\n    this.props.clearContact();\n  }\n\n  onChange = (field, value) => {\n    let currentContact = { ...this.props.contact };\n\n    this.props.changeContact({\n      contact: currentContact,\n      field: field,\n      value: value\n    });\n  };\n\n  changeValue(e, type) {\n    const value = e.target.value;\n    const nextState = {};\n    nextState[type] = value;\n    this.setState(nextState);\n  }\n\n  isDisabled() {\n    const {employeeId, firstName, lastName, address, phone,email,role,laptopId,department} = this.state;\n    let isIdValid = false;\n    let isFirstNameValid = false;\n    let isLastNameValid = false;\n    let isAddressValid = false;\n    let isDepartmentValid = false;\n    let idRegex = /A-[0-9]{4}$/;\n    let nameRegex = /^[a-zA-Z ]*$/;\n    let laptopRegex =/^[a-z0-9]+$/i;\n    let emailRegex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n    let phoneRegex = /[1-9][0-9]{9}$/;\n    let isEmailValid = false;\n    let isPhoneValid = false;\n    let isLaptopValid = false;\n\n    if (employeeId === \"\") {\n      this.setState({idError: null});\n    } else if (employeeId.match(idRegex)) {\n      isIdValid = true;\n      this.setState({idError: null});\n    } else {\n      this.setState({idError: \"Please enter a valid Employee ID\"});\n    }\n\n    if (department === \"\") {\n      this.setState({departmentError: null});\n    } else if (department.match(nameRegex)) {\n      isDepartmentValid = true;\n      this.setState({departmentError: null});\n    } else {\n      this.setState({departmentError: \"Please enter a valid Department\"});\n    }\n\n    if (firstName === \"\") {\n      this.setState({firstNameError: null});\n    } else if (firstName.match(nameRegex)) {\n      isFirstNameValid = true;\n      this.setState({firstNameError: null});\n    } else {\n      this.setState({firstNameError: \"Please enter a valid First Name\"});\n    }\n\n    if (lastName === \"\") {\n      this.setState({lastNameError: null});\n    } else if (lastName.match(nameRegex)) {\n      isLastNameValid = true;\n      this.setState({lastNameError: null});\n    } else {\n      this.setState({lastNameError: \"Please enter a valid Last Name\"});\n    }\n\n    if (laptopId === \"\") {\n      this.setState({laptopError: null});\n    } else if (laptopId.match(laptopRegex)) {\n      isLaptopValid = true;\n      this.setState({laptopError: null});\n    } else {\n      this.setState({laptopError: \"Please enter a valid Laptop ID\"});\n    }\n\n    if (email === \"\") {\n      this.setState({emailError: null});\n    } else if (email.match(emailRegex)) {\n      isEmailValid = true;\n      this.setState({emailError: null});\n    } else {\n      this.setState({emailError: \"Please enter a valid Email\"});\n    }\n\n    if (phone === \"\") {\n      this.setState({phoneError: null});\n    } else if (phone.match(phoneRegex) && phone.length === 10) {\n      isPhoneValid = true;\n      this.setState({phoneError: null});\n    } else {\n      this.setState({phoneError: \"Please enter a valid Phone\"});\n    }\n\n    if (isIdValid && isFirstNameValid && isLastNameValid  && isEmailValid && isPhoneValid && isDepartmentValid && isLaptopValid) {\n      this.setState({submitDisabled: false});\n    }\n    if (!isIdValid || !isFirstNameValid || !isLastNameValid || !isEmailValid || !isPhoneValid || !isDepartmentValid || !isLaptopValid) {\n      this.setState({submitDisabled: true});\n    }\n\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const {employeeId, firstName, lastName, address, phone,email,role,laptopId,department} = this.state;\n    this.setState({loading: true});\n    axios.post(\"http://localhost:8081/employee\", {employeeId, firstName, lastName, address, phone,email,role,laptopId,department}).then(result => {\n      let data = result.data;\n      this.setState({loading: false});\n      if(data === \"\") {\n        this.setState({failure: true});\n      } else {\n        this.setState({success: true});\n      }\n      this.props.clearContact();\n    });\n  };\n\n  render() {\n    const { employeeId, firstName, lastName, address, phone,email,role,laptopId,department } = this.props.contact;\n    return (\n      <section>\n\n        <div className=\"container\">\n          <MuiThemeProvider>\n            <div >\n              <form onSubmit={this.onSubmit}>\n                <div className=\"inputFormBox\">\n                <div className={\"row\"}>\n                  <div className=\"col-sm-6 col-md-6\">\n                <TextField\n                    style={{maxWidth: \"100%\"}}\n                    errorText={this.state.idError}\n                    hintText=\"Enter Employee ID\"\n                    floatingLabelText=\"Employee ID\"\n                    onChange={e => this.changeValue(e, 'employeeId')}\n                    onBlur={this.isDisabled}\n                />\n                  </div>\n                  <div className=\"col-sm-6 col-md-6\">\n                <TextField\n                    style={{maxWidth: \"100%\"}}\n                    errorText={this.state.firstNameError}\n                    hintText=\"Enter First Name\"\n                    floatingLabelText=\"First Name\"\n                    onChange={e => this.changeValue(e, 'firstName')}\n                    onBlur={this.isDisabled}\n                />\n                  </div>\n                </div>\n                  <div className={\"row\"}>\n                  <div className=\"col-sm-6 col-md-6\">\n                <TextField\n                    style={{maxWidth: \"100%\"}}\n                    errorText={this.state.lastNameError}\n                    hintText=\"Enter Last Name\"\n                    floatingLabelText=\"Last Name\"\n                    onChange={e => this.changeValue(e, 'lastName')}\n                    onBlur={this.isDisabled}\n                />\n                  </div>\n                    <div className=\"col-sm-6 col-md-6\">\n                <TextField\n                    style={{maxWidth: \"100%\"}}\n                    hintText=\"Enter Your Address\"\n                    floatingLabelText=\"Address\"\n                    onChange={e => this.changeValue(e, 'address')}\n                    onBlur={this.isDisabled}\n                />\n                    </div>\n                  </div>\n                <div className={\"row\"}>\n                    <div className=\"col-sm-6 col-md-6\">\n                <TextField\n                    style={{maxWidth: \"100%\"}}\n                    errorText={this.state.emailError}\n                    hintText=\"Enter your Email\"\n                    floatingLabelText=\"Email\"\n                    onChange={e => this.changeValue(e, 'email')}\n                    onBlur={this.isDisabled}\n                />\n                    </div>\n\n                  <div className=\"col-sm-6 col-md-6\">\n                <TextField\n                    style={{maxWidth: \"100%\"}}\n                    errorText={this.state.phoneError}\n                    hintText=\"Enter your Phone\"\n                    floatingLabelText=\"Phone\"\n                    onChange={e => this.changeValue(e, 'phone')}\n                    onBlur={this.isDisabled}\n                />\n                  </div>\n                </div>\n                <div className={\"row\"}>\n                  <div className=\"col-sm-6 col-md-6\">\n                <TextField\n                    style={{maxWidth: \"100%\"}}\n                    errorText={this.state.departmentError}\n                    hintText=\"Enter your Department\"\n                    floatingLabelText=\"Department\"\n                    onChange={e => this.changeValue(e, 'department')}\n                    onBlur={this.isDisabled}\n                />\n                  </div>\n\n                  <div className=\"col-sm-6 col-md-6\">\n                <TextField\n                    style={{maxWidth: \"100%\"}}\n                    errorText={this.state.laptopError}\n                    hintText=\"Enter your Laptop ID\"\n                    floatingLabelText=\"Laptop Id\"\n                    onChange={e => this.changeValue(e, 'laptopId')}\n                    onBlur={this.isDisabled}\n                />\n                  </div>\n                </div>\n                </div>\n                <br></br>\n                <div className={\"row\"}>\n                  <div className=\"col-sm-12 col-md-12\">\n                <RaisedButton style={{maxWidth: \"100%\"}} label=\"Add Employee\" type='submit' primary={true}\n                              disabled={this.state.submitDisabled}/>\n                  </div>\n                </div>\n                <Dialog\n                    open={this.state.success}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    className=\"dialog\"\n                >\n                  <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                      Employee added successfully\n                    </DialogContentText>\n                  </DialogContent>\n                  <DialogActions>\n                    <RaisedButton onClick={this.handleCloseSuccess} primary={true} className=\"dialogButton\" type='submit'>\n                      OK\n                    </RaisedButton>\n                  </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.state.failure}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    className=\"dialog\"\n                >\n                  <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                      <img src={errorLogo} alt=\"error logo\" style={{maxWidth:\"100%\"}} height={50}/>\n                      <br/>\n                      Employee ID already exists. Please try again\n                      <br/>\n                    </DialogContentText>\n                  </DialogContent>\n                  <DialogActions>\n                    <RaisedButton onClick={this.handleCloseFailure} primary={true} className=\"dialogButton\" type='submit'>\n                      OK\n                    </RaisedButton>\n                  </DialogActions>\n                </Dialog>\n\n              </form>\n            </div>\n          </MuiThemeProvider>\n          <Modal open={this.state.loading} style={{backgroundColor: \"rgba(255,255,255, 0.2)\", maxWidth: \"80%\"}}>\n            <div className=\"loadingSecurity\"><img src={loading} alt=\"loading\" height=\"100\"/></div>\n          </Modal>\n\n        </div>\n      </section>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(actions, dispatch);\n};\n\nconst Create = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CreateContact);\n\nexport default Create;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport NavItem from \"./NavItem\";\nimport * as actions from \"../actions/action_index\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { file } from \"@babel/types\";\nimport \"./../App.css\";\n\nfunction mapStateToProps(state) {\n  return {\n    contact: state.contact,\n    imageUrl: state.imageUrl\n  };\n}\n\nclass ShowContact extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:8081/employee/\" + this.props.match.params.id).then(response => {\n      let data = response.data;\n      let contact = {\n        id: data.id,\n        name: data.name,\n        address: data.address,\n        city: data.city,\n        phone: data.phone,\n        email: data.email,\n        contactImage: data.contactImage\n      };\n      this.props.showContact({\n        contact: contact\n      });\n    });\n  }\n\n  delete(id) {\n    console.log(id);\n    axios.delete(\"http://localhost:8081/employee/\" + id).then(result => {\n      this.props.handleClose();\n    });\n  }\n\n  render() {\n    // let imageUrl = null;\n    // if (this.props.contact.id !== \"\") {\n    //   imageUrl = `/file/${this.props.contact.id}`;\n    // }\n    return (\n      <section>\n        <NavItem />\n        <div class=\"container\">\n          <div class=\"panel panel-default\">\n            <div class=\"panel-heading\">\n              <h3 class=\"panel-title\">Contact Details</h3>\n            </div>\n            <div class=\"panel-body\">\n              <dl>\n                <dd>\n                  {this.props.imageUrl && <img className=\"contact-image\" src={this.props.imageUrl} alt=\"contact\" />}\n                </dd>\n                <dt>Name:</dt>\n                <dd>{this.props.contact.name}</dd>\n                <dt>Address:</dt>\n                <dd>{this.props.contact.address}</dd>\n                <dt>City:</dt>\n                <dd>{this.props.contact.city}</dd>\n                <dt>Phone Number:</dt>\n                <dd>{this.props.contact.phone}</dd>\n                <dt>Email Address:</dt>\n                <dd>{this.props.contact.email}</dd>\n              </dl>\n              <Link to={`/edit/${this.props.contact.id}`} className=\"btn btn-success\">\n                Edit\n              </Link>\n              &nbsp;\n              <button onClick={this.delete.bind(this, this.props.contact.id)} className=\"btn btn-danger\">\n                Delete\n              </button>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(actions, dispatch);\n};\nconst Show = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ShowContact);\nexport default Show;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { bindActionCreators } from \"redux\";\nimport * as actions from \"../actions/action_index\";\nimport { connect } from \"react-redux\";\nimport NavItem from \"./NavItem\";\n\nfunction mapStateToProps(state) {\n    return {\n        contact: state.contact,\n        imageUrl: state.imageUrl\n    };\n}\n\nclass Logo extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        this.props.showImage({\n            contactId: this.props.match.params.id\n        });\n    }\n\n    onChangeContactImage = event => {\n        const data = new FormData();\n        data.append(\"file\", event.target.files[0]);\n        let contactId = this.props.match.params.id;\n\n        axios.post(\"http://localhost:8081/contact/upload/\" + contactId, data, {}).then(response => {\n            this.props.history.push(\"/\");\n        });\n    };\n\n    render() {\n        return (\n            <section>\n                <NavItem />\n                <div className=\"container\">\n                    <div className=\"panel panel-default\">\n                        <div className=\"panel-heading\">\n                            <h3 className=\"panel-title\">Edit Contact Image</h3>\n                        </div>\n                        <div className=\"panel-body\">\n                            <form onSubmit={this.onSubmit} enctype=\"multipart/form-data\">\n                                <div className=\"form-group\">\n                                    {this.props.imageUrl && <img className=\"contact-image\" src={this.props.imageUrl} alt=\"contact\" />}\n                                    <input type=\"file\" name=\"file\" onChange={event => this.onChangeContactImage(event)} />\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return bindActionCreators(actions, dispatch);\n};\n\nconst ContactImage = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Logo);\nexport default ContactImage;\n","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from \"axios\";\nimport * as actions from \"../actions/action_index\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport NavItem from \"./NavItem\";\n\nfunction mapStateToProps(state) {\n  return {\n    contact: state.contact\n  };\n}\n\nclass AddUsers extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.props.clearContact();\n  }\n  // onChange = (field, value) => {\n  //   let currentContact = { ...this.props.contact };\n\n  //   this.props.changeContact({\n  //     contact: currentContact,\n  //     field: field,\n  //     value: value\n  //   });\n  // };\n\n  onSubmit = () => {\n    const [username, password, role] = [\"test\", \"test\", \"user\"];\n\n    axios.post(\"http://localhost:8081/users\", { username, password, role }).then(result => {\n      this.props.history.push(\"/\");\n    });\n  };\n\n  render() {\n    return (\n      // <section>\n      //   <NavItem />\n      //   <div class=\"container\">\n      //     <div class=\"panel panel-default\">\n      //       <div class=\"panel-heading\">\n      //         <h3 class=\"panel-title\">ADD CONTACT</h3>\n      //       </div>\n      //       <div class=\"panel-body\">\n      //         <h4>\n      //           <Link to=\"/\">\n      //             <span class=\"glyphicon glyphicon-th-list\" aria-hidden=\"true\" /> Contacts List\n      //           </Link>\n      //         </h4>\n      //         <form onSubmit={this.onSubmit}>\n      //           <div class=\"form-group\">\n      //             <label for=\"isbn\">Name:</label>\n      //             <input\n      //               type=\"text\"\n      //               class=\"form-control\"\n      //               name=\"name\"\n      //               value={name}\n      //               onChange={event => this.onChange(\"name\", event.target.value)}\n      //               placeholder=\"Name\"\n      //             />\n      //           </div>\n      //           <div class=\"form-group\">\n      //             <label for=\"title\">Address:</label>\n      //             <input\n      //               type=\"text\"\n      //               class=\"form-control\"\n      //               name=\"address\"\n      //               value={address}\n      //               onChange={event => this.onChange(\"address\", event.target.value)}\n      //               placeholder=\"Address\"\n      //             />\n      //           </div>\n      //           <div class=\"form-group\">\n      //             <label for=\"author\">City:</label>\n      //             <input\n      //               type=\"text\"\n      //               class=\"form-control\"\n      //               name=\"city\"\n      //               value={city}\n      //               onChange={event => this.onChange(\"city\", event.target.value)}\n      //               placeholder=\"City\"\n      //             />\n      //           </div>\n      //           <div class=\"form-group\">\n      //             <label for=\"published_date\">Phone:</label>\n      //             <input\n      //               type=\"text\"\n      //               class=\"form-control\"\n      //               name=\"phone\"\n      //               value={phone}\n      //               onChange={event => this.onChange(\"phone\", event.target.value)}\n      //               placeholder=\"Phone Number\"\n      //             />\n      //           </div>\n      //           <div class=\"form-group\">\n      //             <label for=\"publisher\">Email:</label>\n      //             <input\n      //               type=\"email\"\n      //               class=\"form-control\"\n      //               name=\"email\"\n      //               value={email}\n      //               onChange={event => this.onChange(\"email\", event.target.value)}\n      //               placeholder=\"Email Address\"\n      //             />\n      //           </div>\n      //           <button type=\"submit\" class=\"btn btn-info\">\n      //             Submit\n      //           </button>\n      //         </form>\n      //       </div>\n      //     </div>\n      //   </div>\n      // </section>\n      <section>\n        <NavItem />\n        <button type=\"button\" class=\"btn btn-info\" onClick={() => this.onSubmit()}>\n          Add User\n        </button>\n      </section>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(actions, dispatch);\n};\n\nconst Users = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AddUsers);\n\nexport default Users;\n","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from \"axios\";\nimport {Link, Redirect} from \"react-router-dom\";\nimport { withRouter } from 'react-router-dom'\nimport \"./Login.css\";\nimport logo from \"../ibslogo.svg\"\nimport errorLogo from \"../error.ico\"\nimport loading from \"../loading.gif\";\n\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport TextField from 'material-ui/TextField';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport Modal from '@material-ui/core/Modal';\n\nclass Login extends Component {\n\n  //Setting up the component states\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      usernameError: \"\",\n      passwordError: \"\",\n      submitDisabled: true,\n      credentialError: false,\n      loading: false\n    };\n    this.isDisabled = this.isDisabled.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  //To assign entered value to state variable\n  changeValue(e, type) {\n    const value = e.target.value;\n    const nextState = {};\n    nextState[type] = value;\n    this.setState(nextState);\n  }\n\n  //For the pop up\n  handleClose() {\n    this.setState({credentialError: false});\n  }\n\n  //For validating username and password\n  isDisabled() {\n    const {username, password} = this.state;\n    let isUsernameValid = false;\n    let isPasswordValid = false;\n    let usernameRegex = /A-[0-9]{4}$/i;\n\n    if (username === \"admin\") {\n      isUsernameValid = true;\n      this.setState({usernameError: null});\n    } else if (username === \"\") {\n        this.setState({usernameError: null});\n    } else if (username.match(usernameRegex)) {\n        isUsernameValid = true;\n        this.setState({usernameError: null});\n    } else {\n        this.setState({usernameError: \"Please enter a valid Employee ID\"});\n    }\n\n    if (password === \"\") {\n      this.setState({passwordError: null});\n    } else if (password.length >= 5 || password.indexOf(' ') === 0) {\n        isPasswordValid = true;\n        this.setState({passwordError: null});\n    } else if(this.state.password.length < 5){\n        this.setState({passwordError: \"Your password must be at least 5 characters\"});\n    } else {\n        this.setState({passwordError: \"Please enter a valid password\"});\n    }\n    if (isUsernameValid && isPasswordValid) {\n      this.setState({submitDisabled: false});\n    }\n    if (!isUsernameValid || !isPasswordValid) {\n      this.setState({submitDisabled: true});\n    }\n\n  }\n\n  //Perform user authentication\n  onSubmit = e => {\n    e.preventDefault();\n\n    const {username, password} = this.state;\n\n    if (username === \"admin\" && password === \"admin\") {\n\n      console.log(\"Admin is authenticated\");\n      localStorage.setItem(\"isAuthenticated\", true);\n      localStorage.setItem(\"username\", \"admin\");\n      localStorage.setItem(\"role\", \"admin\");\n      this.props.history.push(\"/\");\n\n    } else {\n      this.setState({loading: true});\n      let empId = username.toUpperCase();\n      axios.post(\"/login\", {empId, password}).then(result => {\n        this.setState({loading: false});\n        if (result.data === true) {\n          console.log(\"User is authenticated\");\n          localStorage.setItem(\"isAuthenticated\", true);\n          localStorage.setItem(\"username\", empId);\n          localStorage.setItem(\"role\", \"security\");\n          this.props.history.push(\"/\");\n        } else {\n          this.setState({credentialError: true});\n        }\n      });\n\n    }\n  };\n\n  render() {\n      if(localStorage.getItem(\"isAuthenticated\") !== null) {\n          return   <Redirect to={{\n              pathname: '/'}\n          } />\n      } else {\n          return (\n              <div className=\"container\">\n                  <MuiThemeProvider>\n                      <div className=\"login\">\n                          <img src={logo} alt=\"logo\" style={{maxWidth: \"100%\"}}/>\n                          <br/>\n                          <form onSubmit={this.onSubmit}>\n                              <br/>\n                              <TextField\n                                  style={{maxWidth: \"100%\"}}\n                                  errorText={this.state.usernameError}\n                                  hintText=\"Enter your Employee ID\"\n                                  floatingLabelText=\"Employee ID\"\n                                  onChange={e => this.changeValue(e, 'username')}\n                                  onBlur={this.isDisabled}\n                              />\n                              <br/>\n                              <TextField\n                                  style={{maxWidth: \"100%\"}}\n                                  type=\"password\"\n                                  errorText={this.state.passwordError}\n                                  hintText=\"Enter your Password\"\n                                  floatingLabelText=\"Password\"\n                                  onChange={e => this.changeValue(e, 'password')}\n                                  onBlur={this.isDisabled}\n                              />\n                              <br/>\n                              <br/>\n                              <RaisedButton style={{maxWidth: \"100%\"}} label=\"Sign In\" type='submit' primary={true}\n                                            disabled={this.state.submitDisabled}/>\n                              <Dialog\n                                  open={this.state.credentialError}\n                                  aria-labelledby=\"alert-dialog-title\"\n                                  aria-describedby=\"alert-dialog-description\"\n                                  className=\"dialog\"\n                              >\n                                  <DialogContent>\n                                      <DialogContentText id=\"alert-dialog-description\">\n                                          <img src={errorLogo} alt=\"error logo\" style={{maxWidth: \"100%\"}} height={50}/>\n                                          <br/>\n                                          Invalid Credentials. Please try again\n                                          <br/>\n                                      </DialogContentText>\n                                  </DialogContent>\n                                  <DialogActions>\n                                      <RaisedButton onClick={this.handleClose} primary={true} className=\"dialogButton\"\n                                                    type='submit'>\n                                          OK\n                                      </RaisedButton>\n                                  </DialogActions>\n                              </Dialog>\n                          </form>\n                      </div>\n                  </MuiThemeProvider>\n                  <Modal open={this.state.loading} style={{backgroundColor: \"rgba(255,255,255, 0.2)\"}}>\n                      <div className=\"loadingLogin\"><img src={loading} alt=\"loading\" height=\"100\"/></div>\n                  </Modal>\n              </div>\n          );\n      }\n  }\n}\n\nexport default withRouter(Login);\n","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from \"axios\";\nimport * as actions from \"../actions/action_index\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport NavItem from \"./NavItem\";\nimport { withRouter } from 'react-router-dom'\n\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport TextField from 'material-ui/TextField';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport Modal from '@material-ui/core/Modal';\nimport loading from \"../loading.gif\";\nimport \"./Security.css\";\nimport errorLogo from \"../error.ico\";\nimport {FormLabel} from \"@material-ui/core\";\n\n\nclass Security extends Component {\n\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: \"\",\n      name: \"\",\n      password: \"\",\n      phone: \"\",\n      email: \"\",\n      location: \"\",\n      buildingNo: \"\",\n      idError: \"\",\n      nameError: \"\",\n      passwordError: \"\",\n      phoneError: \"\",\n      emailError: \"\",\n      locationError:\"\",\n      submitDisabled: true,\n      success: false,\n      failure: false,\n      loading: false\n    };\n    this.isDisabled = this.isDisabled.bind(this);\n    this.handleCloseSuccess = this.handleCloseSuccess.bind(this);\n    this.handleCloseFailure = this.handleCloseFailure.bind(this);\n  }\n\n  changeValue(e, type) {\n    const value = e.target.value;\n    const nextState = {};\n    nextState[type] = value;\n    this.setState(nextState);\n  }\n\n  //For the pop up\n  handleCloseSuccess() {\n    this.setState({success: false});\n    this.props.history.push(\"/security\");\n  }\n\n  handleCloseFailure() {\n    this.setState({failure: false});\n  }\n\n  isDisabled() {\n    const {id, name, password, email, phone, location} = this.state;\n    let isIdValid = false;\n    let isNameValid = false;\n    let isPasswordValid = false;\n    let idRegex = /A-[0-9]{4}$/;\n    let nameRegex = /^[a-zA-Z ]*$/;\n    let emailRegex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n    let phoneRegex = /[1-9][0-9]{9}$/;\n    let isEmailValid = false;\n    let isPhoneValid = false;\n    let isLocationValid = false;\n\n    if (id === \"\") {\n      this.setState({idError: null});\n    } else if (id.match(idRegex)) {\n      isIdValid = true;\n      this.setState({idError: null});\n    } else {\n      this.setState({idError: \"Please enter a valid Employee ID\"});\n    }\n\n\n    if (name === \"\") {\n      this.setState({nameError: null});\n    } else if (name.match(nameRegex)) {\n      isNameValid = true;\n      this.setState({nameError: null});\n    } else {\n      this.setState({nameError: \"Please enter a valid Name\"});\n    }\n\n    if (location === \"\") {\n      this.setState({locationError: null});\n    } else if (location.match(nameRegex)) {\n      isLocationValid = true;\n      this.setState({locationError: null});\n    } else {\n      this.setState({locationError: \"Please enter a valid Location\"});\n    }\n\n    if (email === \"\") {\n      this.setState({emailError: null});\n    } else if (email.match(emailRegex)) {\n      isEmailValid = true;\n      this.setState({emailError: null});\n    } else {\n      this.setState({emailError: \"Please enter a valid Email\"});\n    }\n\n    if (phone === \"\") {\n      this.setState({phoneError: null});\n    } else if (phone.match(phoneRegex) && phone.length === 10) {\n      isPhoneValid = true;\n      this.setState({phoneError: null});\n    } else {\n      this.setState({phoneError: \"Please enter a valid Phone\"});\n    }\n\n\n\n    if (password === \"\") {\n      this.setState({passwordError: null});\n    } else if (password.length >= 5 || password.indexOf(' ') === 0) {\n      isPasswordValid = true;\n      this.setState({passwordError: null});\n    } else if (this.state.password.length < 5) {\n      this.setState({passwordError: \"Your password must be at least 5 characters\"});\n    } else {\n      this.setState({passwordError: \"Please enter a valid password\"});\n    }\n\n    if (isIdValid && isNameValid && isPasswordValid && isEmailValid && isPhoneValid) {\n      this.setState({submitDisabled: false});\n    }\n    if (!isIdValid || !isNameValid || !isPasswordValid || !isEmailValid || !isPhoneValid || !isLocationValid) {\n      this.setState({submitDisabled: true});\n    }\n\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const {id, name, password, email, phone, location, buildingNo} = this.state;\n    this.setState({loading: true});\n    axios.post(\"/securities\", {id, name, password, email, phone, location, buildingNo}).then(result => {\n      let data = result.data;\n      this.setState({loading: false});\n      if(data === \"\") {\n        this.setState({failure: true});\n      } else {\n        this.setState({success: true});\n      }\n    });\n  };\n\n  render() {\n    return (\n        <section>\n        <NavItem/>\n        <div className=\"container\" align=\"center\">\n          <MuiThemeProvider>\n            <div className=\"security\">\n              <br/>\n              <h3 style={{maxWidth: \"100%\"}}>Add Security User</h3>\n              <form onSubmit={this.onSubmit}>\n                <br/>\n                <TextField\n                    style={{maxWidth: \"100%\"}}\n                    errorText={this.state.idError}\n                    hintText=\"Enter Security ID\"\n                    floatingLabelText=\"Security ID\"\n                    onChange={e => this.changeValue(e, 'id')}\n                    onBlur={this.isDisabled}\n                />\n                <br/>\n                <TextField\n                    style={{maxWidth: \"100%\"}}\n                    errorText={this.state.nameError}\n                    hintText=\"Enter Security Name\"\n                    floatingLabelText=\"Security Name\"\n                    onChange={e => this.changeValue(e, 'name')}\n                    onBlur={this.isDisabled}\n                />\n                <br/>\n                <TextField\n                    style={{maxWidth: \"100%\"}}\n                    type=\"password\"\n                    errorText={this.state.passwordError}\n                    hintText=\"Enter your Password\"\n                    floatingLabelText=\"Password\"\n                    onChange={e => this.changeValue(e, 'password')}\n                    onBlur={this.isDisabled}\n                />\n                <br/>\n                <TextField\n                    style={{maxWidth: \"100%\"}}\n                    errorText={this.state.emailError}\n                    hintText=\"Enter your Email\"\n                    floatingLabelText=\"Email\"\n                    onChange={e => this.changeValue(e, 'email')}\n                    onBlur={this.isDisabled}\n                />\n                <br/>\n                <TextField\n                    style={{maxWidth: \"100%\"}}\n                    errorText={this.state.phoneError}\n                    hintText=\"Enter your Phone\"\n                    floatingLabelText=\"Phone\"\n                    onChange={e => this.changeValue(e, 'phone')}\n                    onBlur={this.isDisabled}\n                />\n                <br/>\n                <TextField\n                    style={{maxWidth: \"100%\"}}\n                    errorText={this.state.locationError}\n                    hintText=\"Enter your Location\"\n                    floatingLabelText=\"Location\"\n                    onChange={e => this.changeValue(e, 'location')}\n                    onBlur={this.isDisabled}\n                />\n                <br/>\n                <TextField\n                    style={{maxWidth: \"100%\"}}\n                    hintText=\"Enter your Building\"\n                    floatingLabelText=\"Building\"\n                    onChange={e => this.changeValue(e, 'buildingNo')}\n                    onBlur={this.isDisabled}\n                />\n                <br/>\n\n                <br/>\n                <RaisedButton style={{maxWidth: \"100%\"}} label=\"Add Security\" type='submit' primary={true}\n                              disabled={this.state.submitDisabled}/>\n                <Dialog\n                    open={this.state.success}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    className=\"dialog\"\n                >\n                  <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                      Security added successfully\n                    </DialogContentText>\n                  </DialogContent>\n                  <DialogActions>\n                    <RaisedButton onClick={this.handleCloseSuccess} primary={true} className=\"dialogButton\" type='submit'>\n                      OK\n                    </RaisedButton>\n                  </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.state.failure}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    className=\"dialog\"\n                >\n                  <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                      <img src={errorLogo} alt=\"error logo\" style={{maxWidth:\"100%\"}} height={50}/>\n                    <br/>\n                      Employee ID already exists. Please try again\n                      <br/>\n                    </DialogContentText>\n                  </DialogContent>\n                  <DialogActions>\n                    <RaisedButton onClick={this.handleCloseFailure} primary={true} className=\"dialogButton\" type='submit'>\n                      OK\n                    </RaisedButton>\n                  </DialogActions>\n                </Dialog>\n              </form>\n            </div>\n          </MuiThemeProvider>\n          <Modal open={this.state.loading} style={{backgroundColor: \"rgba(255,255,255, 0.2)\", maxWidth: \"80%\"}}>\n            <div className=\"loadingSecurity\"><img src={loading} alt=\"loading\" height=\"100\"/></div>\n          </Modal>\n        </div>\n        </section>\n    );\n  }\n}\n\nexport default withRouter(Security);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { bindActionCreators } from \"redux\";\nimport * as actions from \"../actions/action_index\";\nimport { connect } from \"react-redux\";\nimport NavItem from \"./NavItem\";\n\nfunction mapStateToProps(state) {\n    return {\n        contact: state.contact,\n        imageUrl: state.imageUrl\n    };\n}\n\nclass EditSecurity extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            contact: {},\n            selectedFile: null\n        };\n    }\n\n    componentDidMount() {\n        axios.get(\"http://localhost:8081/securities/\" + this.props.match.params.id).then(response => {\n            this.props.showContact({\n                contact: response.data\n            });\n        });\n    }\n\n    onChange = (field, value) => {\n        let currentContact = { ...this.props.contact };\n\n        this.props.changeContact({\n            contact: currentContact,\n            field: field,\n            value: value\n        });\n    };\n\n    onSubmit = e => {\n        e.preventDefault();\n        const {  id, name, email, phone, location,buildingNo,role} = this.props.contact;\n\n        axios.put(\"http://localhost:8081/securities/\" + this.props.contact.id, {id, name, email, phone, location,buildingNo}).then(result => {\n            this.props.clearContact();\n            this.props.history.push(\"/\" );\n        });\n    };\n\n    render() {\n        return (\n            <section>\n                <NavItem/>\n\n                <div className=\"container\">\n                    <div className=\"panel panel-default\">\n                        <div className=\"panel-heading\">\n                            <h3 className=\"panel-title\">EDIT Security</h3>\n                        </div>\n                        <div className=\"panel-body\">\n                            <form onSubmit={this.onSubmit}>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"employeeId\">Employee Id</label>\n                                    <input disabled={false}\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        name=\"id\"\n                                        value={this.props.contact.id}\n                                        onChange={event => this.onChange(\"id\", event.target.value)}\n                                        placeholder=\"Security Id\"\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"firstName\">First Name</label>\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        name=\"name\"\n                                        value={this.props.contact.name}\n                                        onChange={event => this.onChange(\"name\", event.target.value)}\n                                        placeholder=\" Name\"\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label for=\"title\">Address:</label>\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        name=\"location\"\n                                        value={this.props.contact.location}\n                                        onChange={event => this.onChange(\"location\", event.target.value)}\n                                        placeholder=\"Location\"\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label for=\"published_date\">Phone Number:</label>\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        name=\"phone\"\n                                        value={this.props.contact.phone}\n                                        onChange={event => this.onChange(\"phone\", event.target.value)}\n                                        placeholder=\"Phone Number\"\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"department\">Building No</label>\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        name=\"buildingNo\"\n                                        value={this.props.contact.department}\n                                        onChange={event => this.onChange(\"buildingNo\", event.target.value)}\n                                        placeholder=\"Building No\"\n                                    />\n                                </div>\n\n\n                                <div className=\"form-group\">\n                                    <label for=\"description\">Email:</label>\n                                    <input\n                                        type=\"email\"\n                                        className=\"form-control\"\n                                        name=\"email\"\n                                        value={this.props.contact.email}\n                                        onChange={event => this.onChange(\"email\", event.target.value)}\n                                        placeholder=\"Email Address\"\n                                    />\n                                </div>\n\n                                <button  type=\"submit\" className=\"btn btn-info\">\n                                    Update\n                                </button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return bindActionCreators(actions, dispatch);\n};\n\nconst SecurityEdit = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditSecurity);\nexport default SecurityEdit;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\nimport \"./App.css\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store_index\";\n\nimport Edit from \"./components/Edit\";\nimport Create from \"./components/Create\";\nimport Show from \"./components/Show\";\nimport ContactImage from \"./components/ContactImage\";\nimport Users from \"./components/Users\";\nimport Login from \"./components/Login\";\nimport Security from \"./components/Security\";\n\nimport * as serviceWorker from \"./serviceWorker\";\nimport SecurityEdit from \"./components/SecurityEdit\";\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <div>\n        <Switch>\n          <Route exact path=\"/\" component={App} />\n          <Route path=\"/edit/:id\" render={props => <Edit {...props} />} />\n          <Route path=\"/editsecu/:id\" render={props => <SecurityEdit {...props} />} />\n          <Route path=\"/create\" component={Create} />\n          <Route path=\"/show/:id\" component={Show} />\n          <Route path=\"/logo/:id\" component={ContactImage} />\n          <Route path=\"/users\" component={Users} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/security\" component={Security} />\n        </Switch>\n      </div>\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/error.7746519f.ico\";","module.exports = __webpack_public_path__ + \"static/media/loading.05cbe287.gif\";"],"sourceRoot":""}