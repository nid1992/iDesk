{"version":3,"sources":["ibslogo.svg","loading.gif","actions/action_index.jsx","constants/action_type.jsx","components/CreateEmployee.jsx","components/Create.jsx","components/AddEmployeeDialogs.jsx","components/NavItem.jsx","components/CustomizedDialogs.jsx","components/EmployeeList.jsx","components/SecurityList.jsx","components/SimpleDashboardTabs.jsx","App.jsx","reducers/reducer_index.jsx","store/store_index.jsx","components/Edit.jsx","components/Show.jsx","components/ContactImage.jsx","components/Users.jsx","components/Login.jsx","components/Security.jsx","serviceWorker.jsx","components/SecurityEdit.jsx","index.jsx","error.ico"],"names":["module","exports","clearContact","payload","type","showContact","showImage","loadContacts","changeContact","updateContact","CreateComponent","props","onChange","field","value","currentContact","contact","onSubmit","e","preventDefault","employeeId","firstName","lastName","address","phone","email","role","laptopId","department","axios","post","then","result","handleClose","this","employeeImage","class","className","for","name","event","target","placeholder","htmlFor","Component","connect","state","dispatch","bindActionCreators","actions","CreateContact","setState","loading","data","failure","success","isFirstNameValid","isLastNameValid","isAddressValid","isLaptopValid","idError","firstNameError","lastNameError","addressNameError","isDepartmentValid","departmentError","phoneError","emailError","laptopError","submitDisabled","isEdit","undefined","employee","isDisabled","bind","handleCloseSuccess","handleCloseFailure","nextState","isIdValid","nameRegex","isEmailValid","isPhoneValid","match","length","style","maxWidth","errorText","hintText","floatingLabelText","changeValue","onBlur","label","primary","disabled","open","aria-labelledby","aria-describedby","DialogContentText","id","onClick","src","errorLogo","alt","height","Modal","backgroundColor","Create","withStyles","theme","root","margin","padding","spacing","closeButton","position","right","top","color","palette","grey","formControl","marginTop","minWidth","formControlLabel","children","classes","onClose","other","disableTypography","Typography","variant","IconButton","aria-label","NavItem","console","log","localStorage","removeItem","history","push","url","AppBar","Toolbar","Button","startIcon","onButtonClick","getItem","marginLeft","marginRight","Tooltip","title","placement","withRouter","DialogTitle","DialogContent","MuiDialogContent","MuiDialogActions","EditLinkButton","to","CustomizedDialogs","React","useState","setOpen","fullWidth","dividers","gutterBottom","location","buildingNo","uri","delete","refreshEmployee","SearchBar","Search","ClearSearchButton","ConnectedList1","contacts","addLinkFormatterForButton","get","response","cell","row","columns","dataField","text","sort","formatter","defaultSorted","order","keyField","search","searchProps","baseProps","bordered","inverse","hover","condensed","striped","responsive","pagination","paginationFactory","headerClasses","EmployeeList","ConnectedSecurityList","SecurityList","TabPanel","index","hidden","Box","p","a11yProps","useStyles","makeStyles","flexGrow","background","paper","SimpleTabs","setValue","Tabs","newValue","Tab","contactsCount","refreshData","App","userName","pathname","initialState","showContactForm","showDeleteButton","imageUrl","city","rootReducer","action","tempState","contactId","index_of_contact","findIndex","_id","updated_contact","store","createStore","EditContact","put","selectedFile","params","Edit","ShowContact","contactImage","Show","Logo","onChangeContactImage","FormData","append","files","enctype","ContactImage","AddUsers","username","password","Users","Login","setItem","empId","toUpperCase","credentialError","usernameError","passwordError","isUsernameValid","isPasswordValid","indexOf","logo","Security","nameError","locationError","isNameValid","isLocationValid","Boolean","window","hostname","EditSecurity","SecurityEdit","ReactDOM","render","exact","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b3857981.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ibslogo.70ab30a9.svg\";","module.exports = __webpack_public_path__ + \"static/media/loading.05cbe287.gif\";","import { CLEAR_CONTACT } from \"../constants/action_type\";\nimport { SHOW_CONTACT } from \"../constants/action_type\";\nimport { LOAD_CONTACTS } from \"../constants/action_type\";\nimport { CHANGE_CONTACT } from \"../constants/action_type\";\nimport { UPDATE_CONTACT } from \"../constants/action_type\";\nimport { SHOW_IMAGE } from \"../constants/action_type\";\n\nexport const clearContact = payload => {\n  return { type: CLEAR_CONTACT, payload };\n};\n\nexport const showContact = payload => {\n  return { type: SHOW_CONTACT, payload };\n};\n\nexport const showImage = payload => {\n  return { type: SHOW_IMAGE, payload };\n};\n\nexport const loadContacts = payload => {\n  return { type: LOAD_CONTACTS, payload };\n};\n\nexport const changeContact = payload => {\n  return { type: CHANGE_CONTACT, payload };\n};\n\nexport const updateContact = payload => {\n  return { type: UPDATE_CONTACT, payload };\n};\n","export const CLEAR_CONTACT = \"CLEAR_CONTACT\";\nexport const SHOW_CONTACT = \"SHOW_CONTACT\";\nexport const CHANGE_CONTACT = \"CHANGE_CONTACT\";\nexport const UPDATE_CONTACT = \"UPDATE_CONTACT\";\nexport const LOAD_CONTACTS = \"LOAD_CONTACTS\";\nexport const SHOW_IMAGE = \"SHOW_IMAGE\";\n","import React, {Component} from \"react\";\nimport axios from \"axios\";\nimport NavItem from \"./NavItem\";\nimport {Link} from \"react-router-dom\";\nimport {bindActionCreators} from \"redux\";\nimport * as actions from \"../actions/action_index\";\nimport {connect} from \"react-redux\";\n\n\nclass CreateComponent extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        this.props.clearContact();\n    }\n    onChange = (field, value) => {\n        let currentContact = { ...this.props.contact };\n\n        this.props.changeContact({\n            contact: currentContact,\n            field: field,\n            value: value\n        });\n    };\n\n    onSubmit = e => {\n        e.preventDefault();\n\n        const { employeeId, firstName, lastName, address, phone,email,role,laptopId , department } = this.props.contact;\n\n        axios.post(\"http://localhost:8081/employee\", { employeeId, firstName, lastName, address, phone,email,role,laptopId, department }).then(result => {\n            this.props.clearContact();\n            this.props.handleClose();\n        });\n    };\n\n    render() {\n        const { employeeId, firstName, lastName, address, phone,email,role,laptopId, department, employeeImage } = this.props.contact;\n        return (\n            <section>\n\n                <div class=\"container\">\n                    <div class=\"panel panel-default\">\n                        <div class=\"panel-body\">\n                            <div className=\"col-sm-12 col-md-12\">\n                            <form onSubmit={this.onSubmit}>\n                                <div className={\"row\"}>\n                                <div className=\"col-sm-6 col-md-6\">\n\n                                <div class=\"form-group\">\n                                    <label for=\"employeeId\">Employee Id</label>\n                                    <input\n                                        type=\"text\"\n                                        class=\"form-control\"\n                                        name=\"employeeId\"\n                                        value={employeeId}\n                                        onChange={event => this.onChange(\"employeeId\", event.target.value)}\n                                        placeholder=\"Employee Id\"\n                                    />\n                                </div>\n                                </div>\n                                <div className=\"col-sm-6 col-md-6\">\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"firstName\">First Name</label>\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        name=\"firstName\"\n                                        value={firstName}\n                                        onChange={event => this.onChange(\"firstName\", event.target.value)}\n                                        placeholder=\"First Name\"\n                                    />\n                                </div>\n                                </div>\n                                </div>\n                                <div className={\"row\"}>\n                                <div className=\"col-sm-6 col-md-6\">\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"lastName\">Last Name</label>\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        name=\"lastName\"\n                                        value={lastName}\n                                        onChange={event => this.onChange(\"lastName\", event.target.value)}\n                                        placeholder=\"Last Name\"\n                                    />\n                                </div>\n                                </div>\n                                <div className=\"col-sm-6 col-md-6\">\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"phone\">Phone Number</label>\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        name=\"phone\"\n                                        value={phone}\n                                        onChange={event => this.onChange(\"phone\", event.target.value)}\n                                        placeholder=\"phone\"\n                                    />\n                                </div>\n                                </div>\n                                </div>\n                                <div className={\"row\"}>\n                                <div className=\"col-sm-6 col-md-6\">\n\n                                <div class=\"form-group\">\n                                    <label for=\"title\">Address:</label>\n                                    <input\n                                        type=\"text\"\n                                        class=\"form-control\"\n                                        name=\"address\"\n                                        value={address}\n                                        onChange={event => this.onChange(\"address\", event.target.value)}\n                                        placeholder=\"Address\"\n                                    />\n                                </div>\n                                </div>\n                                <div className=\"col-sm-6 col-md-6\">\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"department\">Department</label>\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        name=\"department\"\n                                        value={department}\n                                        onChange={event => this.onChange(\"department\", event.target.value)}\n                                        placeholder=\"Department\"\n                                    />\n                                </div>\n                                </div>\n                                </div>\n                                <div className={\"row\"}>\n                                <div className=\"col-sm-6 col-md-6\">\n\n                                <div class=\"form-group\">\n                                    <label for=\"laptopId\">Laptop Id</label>\n                                    <input\n                                        type=\"text\"\n                                        class=\"form-control\"\n                                        name=\"laptopId\"\n                                        value={laptopId}\n                                        onChange={event => this.onChange(\"laptopId\", event.target.value)}\n                                        placeholder=\"Laptop Id\"\n                                    />\n                                </div>\n                                </div>\n                                <div className=\"col-sm-6 col-md-6\">\n\n                                <div class=\"form-group\">\n                                    <label for=\"publisher\">Email:</label>\n                                    <input\n                                        type=\"email\"\n                                        class=\"form-control\"\n                                        name=\"email\"\n                                        value={email}\n                                        onChange={event => this.onChange(\"email\", event.target.value)}\n                                        placeholder=\"Email Address\"\n                                    />\n                                </div>\n                                </div>\n                                </div>\n                                <div className={\"row\"}>\n                                <div className=\"col-sm-12 col-md-12\">\n\n                                <button type=\"submit\" class=\"btn btn-info\">\n                                    Submit\n                                </button>\n                                </div>\n                                </div>\n                            </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        );\n    }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n    return bindActionCreators(actions, dispatch);\n};\n\nfunction mapStateToProps(state) {\n    return {\n        contact: state.contact\n    };\n}\n\nconst CreateEmployee = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(CreateComponent);\n\nexport default CreateEmployee;","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport * as actions from \"../actions/action_index\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport NavItem from \"./NavItem\";\nimport MuiThemeProvider from \"material-ui/styles/MuiThemeProvider\";\nimport TextField from \"material-ui/TextField\";\nimport RaisedButton from \"material-ui/RaisedButton\";\nimport Dialog from \"@material-ui/core/Dialog/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions/DialogActions\";\nimport errorLogo from \"../error.ico\";\nimport Modal from \"@material-ui/core/Modal\";\nimport loading from \"../loading.gif\";\n\nfunction mapStateToProps(state) {\n  return {\n    contact: state.contact\n  };\n}\n\nclass CreateContact extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      employeeId: \"\",\n      isFirstNameValid:\"\",\n      isLastNameValid:\"\",\n      isAddressValid:\"\",\n      isLaptopValid:\"\",\n      firstName: \"\",\n      lastName:\"\",\n      phone: \"\",\n      email: \"\",\n      address: \"\",\n      laptopId:\"\",\n      idError: \"\",\n      firstNameError: \"\",\n      lastNameError: \"\",\n      addressNameError: \"\",\n      isDepartmentValid:\"\",\n      departmentError:\"\",\n      department:\"\",\n      phoneError: \"\",\n      emailError: \"\",\n      laptopError:\"\",\n      submitDisabled: true,\n      success: false,\n      failure: false,\n      loading: false\n    };\n    this.isEdit = false;\n    if(props.employee!==undefined && props.employee!==null){\n      this.isEdit = true;\n      this.state.firstName=props.employee.firstName;\n      this.state.lastName=props.employee.lastName;\n      this.state.employeeId=props.employee.employeeId;\n      this.state.phone=props.employee.phone;\n      this.state.email=props.employee.email;\n      this.state.address=props.employee.address;\n      this.state.laptopId=props.employee.laptopId;\n      this.state.department=props.employee.department;\n    }\n    this.isDisabled = this.isDisabled.bind(this);\n    this.handleCloseSuccess = this.handleCloseSuccess.bind(this);\n    this.handleCloseFailure = this.handleCloseFailure.bind(this);\n  }\n\n  //For the pop up\n  handleCloseSuccess() {\n    this.setState({success: false});\n    this.props.handleClose();\n   // this.props.history.push(\"/security\");\n  }\n\n  handleCloseFailure() {\n    this.setState({failure: false});\n  }\n\n  componentDidMount() {\n    this.props.clearContact();\n  }\n\n  onChange = (field, value) => {\n    let currentContact = { ...this.props.contact };\n\n    this.props.changeContact({\n      contact: currentContact,\n      field: field,\n      value: value\n    });\n  };\n\n  changeValue(e, type) {\n    const value = e.target.value;\n    const nextState = {};\n    nextState[type] = value;\n    this.setState(nextState);\n  }\n\n  isDisabled() {\n    const {employeeId, firstName, lastName, address, phone,email,role,laptopId,department} = this.state;\n    let isIdValid = false;\n    let isFirstNameValid = false;\n    let isLastNameValid = false;\n    let isAddressValid = false;\n    let isDepartmentValid = false;\n    let idRegex = /A-[0-9]{4}$/;\n    let nameRegex = /^[a-zA-Z ]*$/;\n    let laptopRegex =/^[a-z0-9]+$/i;\n    let emailRegex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n    let phoneRegex = /[1-9][0-9]{9}$/;\n    let isEmailValid = false;\n    let isPhoneValid = false;\n    let isLaptopValid = false;\n\n    if (employeeId === \"\") {\n      this.setState({idError: null});\n    } else if (employeeId.match(idRegex)) {\n      isIdValid = true;\n      this.setState({idError: null});\n    } else {\n      this.setState({idError: \"Please enter a valid Employee ID\"});\n    }\n\n    if (department === \"\") {\n      this.setState({departmentError: null});\n    } else if (department.match(nameRegex)) {\n      isDepartmentValid = true;\n      this.setState({departmentError: null});\n    } else {\n      this.setState({departmentError: \"Please enter a valid Department\"});\n    }\n\n    if (firstName === \"\") {\n      this.setState({firstNameError: null});\n    } else if (firstName.match(nameRegex)) {\n      isFirstNameValid = true;\n      this.setState({firstNameError: null});\n    } else {\n      this.setState({firstNameError: \"Please enter a valid First Name\"});\n    }\n\n    if (lastName === \"\") {\n      this.setState({lastNameError: null});\n    } else if (lastName.match(nameRegex)) {\n      isLastNameValid = true;\n      this.setState({lastNameError: null});\n    } else {\n      this.setState({lastNameError: \"Please enter a valid Last Name\"});\n    }\n\n    if (laptopId === \"\") {\n      this.setState({laptopError: null});\n    } else if (laptopId.match(laptopRegex)) {\n      isLaptopValid = true;\n      this.setState({laptopError: null});\n    } else {\n      this.setState({laptopError: \"Please enter a valid Laptop ID\"});\n    }\n\n    if (email === \"\") {\n      this.setState({emailError: null});\n    } else if (email.match(emailRegex)) {\n      isEmailValid = true;\n      this.setState({emailError: null});\n    } else {\n      this.setState({emailError: \"Please enter a valid Email\"});\n    }\n\n    if (phone === \"\") {\n      this.setState({phoneError: null});\n    } else if (phone.match(phoneRegex) && phone.length === 10) {\n      isPhoneValid = true;\n      this.setState({phoneError: null});\n    } else {\n      this.setState({phoneError: \"Please enter a valid Phone\"});\n    }\n\n    if (isIdValid && isFirstNameValid && isLastNameValid  && isEmailValid && isPhoneValid && isDepartmentValid && isLaptopValid) {\n      this.setState({submitDisabled: false});\n    }\n    if (!isIdValid || !isFirstNameValid || !isLastNameValid || !isEmailValid || !isPhoneValid || !isDepartmentValid || !isLaptopValid) {\n      this.setState({submitDisabled: true});\n    }\n\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const {employeeId, firstName, lastName, address, phone,email,role,laptopId,department} = this.state;\n    this.setState({loading: true});\n    axios.post(\"http://localhost:8081/employee\", {employeeId, firstName, lastName, address, phone,email,role,laptopId,department}).then(result => {\n      let data = result.data;\n      this.setState({loading: false});\n      if(data === \"\") {\n        this.setState({failure: true});\n      } else {\n        this.setState({success: true});\n      }\n      this.props.clearContact();\n    });\n  };\n\n  render() {\n    const { employeeId, firstName, lastName, address, phone,email,role,laptopId,department } = this.props.contact;\n    return (\n      <section>\n        <NavItem/>\n        <div className=\"container\">\n          <MuiThemeProvider>\n            <div >\n              <br/>\n              <h3 style={{maxWidth: \"100%\"}}>Add Employee</h3>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"inputFormBox\">\n                <div className={\"row\"}>\n                  <div className=\"col-sm-6 col-md-6\">\n                <TextField\n                    style={{maxWidth: \"100%\"}}\n                    errorText={this.state.idError}\n                    hintText=\"Enter Employee ID\"\n                    floatingLabelText=\"Employee ID\"\n                    onChange={e => this.changeValue(e, 'employeeId')}\n                    onBlur={this.isDisabled}\n                />\n                  </div>\n                  <div className=\"col-sm-6 col-md-6\">\n                <TextField\n                    style={{maxWidth: \"100%\"}}\n                    errorText={this.state.firstNameError}\n                    hintText=\"Enter First Name\"\n                    floatingLabelText=\"First Name\"\n                    onChange={e => this.changeValue(e, 'firstName')}\n                    onBlur={this.isDisabled}\n                />\n                  </div>\n                </div>\n                  <div className={\"row\"}>\n                  <div className=\"col-sm-6 col-md-6\">\n                <TextField\n                    style={{maxWidth: \"100%\"}}\n                    errorText={this.state.lastNameError}\n                    hintText=\"Enter Last Name\"\n                    floatingLabelText=\"Last Name\"\n                    onChange={e => this.changeValue(e, 'lastName')}\n                    onBlur={this.isDisabled}\n                />\n                  </div>\n                    <div className=\"col-sm-6 col-md-6\">\n                <TextField\n                    style={{maxWidth: \"100%\"}}\n                    hintText=\"Enter Your Address\"\n                    floatingLabelText=\"Address\"\n                    onChange={e => this.changeValue(e, 'address')}\n                    onBlur={this.isDisabled}\n                />\n                    </div>\n                  </div>\n                <div className={\"row\"}>\n                    <div className=\"col-sm-6 col-md-6\">\n                <TextField\n                    style={{maxWidth: \"100%\"}}\n                    errorText={this.state.emailError}\n                    hintText=\"Enter your Email\"\n                    floatingLabelText=\"Email\"\n                    onChange={e => this.changeValue(e, 'email')}\n                    onBlur={this.isDisabled}\n                />\n                    </div>\n\n                  <div className=\"col-sm-6 col-md-6\">\n                <TextField\n                    style={{maxWidth: \"100%\"}}\n                    errorText={this.state.phoneError}\n                    hintText=\"Enter your Phone\"\n                    floatingLabelText=\"Phone\"\n                    onChange={e => this.changeValue(e, 'phone')}\n                    onBlur={this.isDisabled}\n                />\n                  </div>\n                </div>\n                <div className={\"row\"}>\n                  <div className=\"col-sm-6 col-md-6\">\n                <TextField\n                    style={{maxWidth: \"100%\"}}\n                    errorText={this.state.departmentError}\n                    hintText=\"Enter your Department\"\n                    floatingLabelText=\"Department\"\n                    onChange={e => this.changeValue(e, 'department')}\n                    onBlur={this.isDisabled}\n                />\n                  </div>\n\n                  <div className=\"col-sm-6 col-md-6\">\n                <TextField\n                    style={{maxWidth: \"100%\"}}\n                    errorText={this.state.laptopError}\n                    hintText=\"Enter your Laptop ID\"\n                    floatingLabelText=\"Laptop Id\"\n                    onChange={e => this.changeValue(e, 'laptopId')}\n                    onBlur={this.isDisabled}\n                />\n                  </div>\n                </div>\n                </div>\n                <br></br>\n                <div className={\"row\"}>\n                  <div className=\"col-sm-12 col-md-12\">\n                <RaisedButton style={{maxWidth: \"100%\"}} label=\"Add Employee\" type='submit' primary={true}\n                              disabled={this.state.submitDisabled}/>\n                  </div>\n                </div>\n                <Dialog\n                    open={this.state.success}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    className=\"dialog\"\n                >\n                  <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                      Employee added successfully\n                    </DialogContentText>\n                  </DialogContent>\n                  <DialogActions>\n                    <RaisedButton onClick={this.handleCloseSuccess} primary={true} className=\"dialogButton\" type='submit'>\n                      OK\n                    </RaisedButton>\n                  </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.state.failure}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    className=\"dialog\"\n                >\n                  <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                      <img src={errorLogo} alt=\"error logo\" style={{maxWidth:\"100%\"}} height={50}/>\n                      <br/>\n                      Employee ID already exists. Please try again\n                      <br/>\n                    </DialogContentText>\n                  </DialogContent>\n                  <DialogActions>\n                    <RaisedButton onClick={this.handleCloseFailure} primary={true} className=\"dialogButton\" type='submit'>\n                      OK\n                    </RaisedButton>\n                  </DialogActions>\n                </Dialog>\n\n              </form>\n            </div>\n          </MuiThemeProvider>\n          <Modal open={this.state.loading} style={{backgroundColor: \"rgba(255,255,255, 0.2)\", maxWidth: \"80%\"}}>\n            <div className=\"loadingSecurity\"><img src={loading} alt=\"loading\" height=\"100\"/></div>\n          </Modal>\n\n        </div>\n      </section>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(actions, dispatch);\n};\n\nconst Create = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CreateContact);\n\nexport default Create;\n","import React from \"react\";\nimport axios from \"axios\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog/Dialog\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {Link} from \"react-router-dom\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport CreateEmployee from \"./CreateEmployee\";\nimport {withStyles} from \"@material-ui/core\";\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle/DialogTitle\";\nimport CloseIcon from \"@material-ui/core/SvgIcon/SvgIcon\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Create from \"./Create\";\n\n\nconst styles = (theme) => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(2),\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n    },\n    formControl: {\n        marginTop: theme.spacing(2),\n        minWidth: 120,\n    },\n    formControlLabel: {\n        marginTop: theme.spacing(1),\n    },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n    const { children, classes, onClose, ...other } = props;\n    return (\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\n            <Typography variant=\"h6\">{children}</Typography>\n            {onClose ? (\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n                    <CloseIcon />\n                </IconButton>\n            ) : null}\n        </MuiDialogTitle>\n    );\n});\n\n\nexport default function AddEmployeeDialogs(props) {\n\n    const [open, setOpen] = React.useState(false);\n    const [fullWidth, setFullWidth] = React.useState(true);\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n    const handleClose = () => {\n        setOpen(false);\n        props.refreshEmployee();\n    };\n\n\n\n    return (\n        <section>\n            {/*<label variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}> Action</label>*/}\n            <a href={\"#\"} onClick={handleClickOpen}> <i className=\"fa fa-plus\" aria-hidden=\"true\"></i> Add Empasdasdasdloyee</a>\n            <Dialog fullWidth={true}\n                    maxWidth={\"md\"} onClose={handleClose} aria-labelledby=\"max-width-dialog-title\" open={open}>\n                <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n                    Add Employee\n                </DialogTitle>\n                <DialogContent dividers>\n                    <Typography  component=\"span\" >\n                        <div className=\"container\">\n                            <div className=\"panel panel-default\">\n                                <div className=\"panel-body\">\n                        <Create handleClose={handleClose}/>\n                                </div>\n                            </div>\n                        </div>\n                        {/*<CreateEmployee handleClose = {handleClose}/>*/}\n                    </Typography>\n\n                </DialogContent>\n\n            </Dialog>\n        </section>\n    );\n}","import React, { Component } from \"react\";\nimport \"./../App.css\";\nimport { withRouter } from 'react-router-dom'\nimport \"./NavItem.css\";\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport AddIcon from '@material-ui/icons/PersonAddOutlined';\nimport AddIconSecurity from '@material-ui/icons/SecurityOutlined';\nimport Home from '@material-ui/icons/Home';\nimport Exit from '@material-ui/icons/ExitToAppSharp';\nimport AddEmployeeDialogs from \"./AddEmployeeDialogs\";\n\n\n\nclass NavItem extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false\n        };\n    }\n\n    onClick = e => {\n        console.log(\"user is logging out\");\n        localStorage.removeItem(\"isAuthenticated\");\n        localStorage.removeItem(\"username\");\n        localStorage.removeItem(\"role\");\n        this.props.history.push(\"/login\");\n    };\n\n    onButtonClick(e, url) {\n        this.props.history.push(url);\n    }\n\n    render() {\n        return (\n            <div style={{maxWidth:'100%'}}>\n                <AppBar position=\"static\" style={{ backgroundColor: '#0d3c5c', maxWidth:'100%'}}>\n                    <Toolbar>\n                        <div style={{maxWidth:'100%'}}>\n                            <Button\n                                startIcon={<Home />}\n                                style={{color: \"white\", maxWidth:'100%'}}\n                                onClick={e => this.onButtonClick(e, '/')}\n                            >\n                                Dashboard\n                            </Button>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            {localStorage.getItem(\"role\") === \"admin\" ?\n                                <Button\n                                    color=\"default\"\n                                    startIcon={<AddIcon />}\n                                    style={{color: \"white\", maxWidth:'100%'}}\n                                    onClick={e => this.onButtonClick(e, '/create')}\n                                >\n                                    Add Employee\n                                </Button>\n                                : null    }\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            {localStorage.getItem(\"role\") === \"admin\" ?\n                                <Button\n                                    color=\"default\"\n                                    startIcon={<AddIconSecurity />}\n                                    style={{color: \"white\", maxWidth:'100%'}}\n                                    onClick={e => this.onButtonClick(e, '/security')}\n                                >\n\n\n                                    Add Security\n                                </Button>\n                                : null    }\n                        </div>\n                        <div style={{maxWidth:'100%', marginLeft: \"auto\", marginRight: \"0\"}}>\n                            <a> <AccountCircleIcon />{localStorage.getItem(\"username\")} </a>\n                            &nbsp;&nbsp;&nbsp;&nbsp;\n                            <Tooltip title=\"Sign Out\" placement=\"top\">\n                                <IconButton\n                                    aria-label=\"signout\"\n                                    onClick={this.onClick}\n                                    style={{color: \"white\"}}\n                                >\n                                    <Exit />\n                                </IconButton>\n                            </Tooltip>\n                        </div>\n                    </Toolbar>\n                </AppBar>\n            </div>\n\n        );\n    }\n}\n\nexport default withRouter(NavItem);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport {Link} from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst styles = (theme) => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(2),\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n    },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n    const { children, classes, onClose, ...other } = props;\n    return (\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\n            <Typography variant=\"h6\">{children}</Typography>\n            {onClose ? (\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n                    <CloseIcon />\n                </IconButton>\n            ) : null}\n        </MuiDialogTitle>\n    );\n});\n\nconst DialogContent = withStyles((theme) => ({\n    root: {\n        padding: theme.spacing(2),\n    },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(1),\n    },\n}))(MuiDialogActions);\n\n\nfunction componentDidMount() {\n\n}\n\nconst EditLinkButton =(props) =>{\n    if(props.type===\"employee\"){\n        return(<Link to={`/edit/${props.id}`} className=\"btn btn-success\">\n            Edit\n        </Link>);\n    } else {\n        return(<Link to={`/editsecu/${props.id}`} className=\"btn btn-success\">\n            Edit\n        </Link>);\n    }\n}\n\n\nexport default function CustomizedDialogs(props) {\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const deleteFun = (id) => {\n        console.log(id);\n        var uri;\n        if(props.type===\"employee\"){\n            uri = \"http://localhost:8081/employee/\";\n        }else{\n            uri = \"http://localhost:8081/securities/\";\n        }\n        axios.delete(uri + id).then(result => {\n            handleClose();\n            props.refreshEmployee();\n        });\n    }\n\n\n    /*const componentDidMount=() => {\n        axios.get(\"http://localhost:8081/contacts/\" + props.employeeId).then(response => {\n            let data = response.data;\n            let contact = {\n                id: data.id,\n                name: data.name,\n                address: data.address,\n                city: data.city,\n                phone: data.phone,\n                email: data.email,\n                contactImage: data.contactImage\n            };\n\n        });\n    }\n    componentDidMount()*/\n    return (\n        <div>\n            <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n                Action\n            </Button>\n            <Dialog fullWidth={true}\n                    maxWidth={\"md\"} className=\"paperWidthLg\" onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n                <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n                    Contact Details\n                </DialogTitle>\n                <DialogContent dividers>\n                    <Typography gutterBottom>\n\n                        <div className=\"container\">\n                            <div className=\"panel panel-default\">\n                                <div className=\"panel-heading\">\n                                    <h3 className=\"panel-title\">Contact Details</h3>\n                                </div>\n                                <div className=\"panel-body\">\n                                    <dl>\n                                       {/* <dd>\n                                            {this.props.imageUrl &&\n                                            <img className=\"contact-image\" src={this.props.imageUrl} alt=\"contact\"/>}\n                                        </dd>*/}\n                                        <dt>Name:</dt>\n                                        <dd>{props.contact.name}</dd>\n                                        <dd>{props.contact.department &&\n                                            <dd>{props.contact.firstName+' '+props.contact.lastName}</dd>}\n                                        </dd>\n                                        <dd>{props.contact.department &&\n                                        <dt>Department:</dt>}\n                                            <dd>{props.contact.department}</dd>\n                                        </dd>\n                                        <dd>{props.contact.laptopId &&\n                                            <dt>Laptop Id:</dt>}\n                                            <dd>{props.contact.laptopId}</dd>\n                                        </dd>\n                                        <dd>{props.contact.address &&\n                                            <dt>Address:</dt>}\n                                            <dd>{props.contact.address}</dd>\n                                        </dd>\n\n                                            <dd>{props.contact.location &&\n                                            <dt>Location:</dt>}\n                                                <dd>{props.contact.location}</dd>\n                                            </dd>\n                                        <dd>{props.contact.buildingNo &&\n                                            <dt>Building No:</dt>}\n                                            <dd>{props.contact.buildingNo}</dd>\n                                        </dd>\n                                        <dt>Phone Number:</dt>\n                                        <dd>{props.contact.phone}</dd>\n                                        <dt>Email Address:</dt>\n                                        <dd>{props.contact.email}</dd>\n                                    </dl>\n                                    <EditLinkButton id={props.contact.id} type={props.type} />\n                                   {/* <Link to={`/edit/${props.contact.id}`} className=\"btn btn-success\">\n                                        Edit\n                                    </Link>*/}\n                                    &nbsp;\n                                    <button onClick={deleteFun.bind(this, props.contact.id)}\n                                            className=\"btn btn-danger\">\n                                        Delete\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </Typography>\n\n                </DialogContent>\n\n            </Dialog>\n        </div>\n    );\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport * as actions from '../actions/action_index';\n// import '../../css/styles.css';\nimport { Link } from 'react-router-dom';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport axios from \"axios\";\nimport EmployeeDialogs from \"./EmployeeDialogs\";\nimport CustomizedDialogs from \"./CustomizedDialogs\";\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\nimport 'react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\n\nconst { SearchBar, ClearSearchButton } = Search;\n\nfunction mapStateToProps(state) {\n    return {\n        //employee: state.contacts,\n        contacts: state.contacts,\n    };\n};\n\nfunction addLinkFormatter(cell, row) {\n    console.log(cell, row)\n    return (\n        <section>\n            <Link to={`/show/${row.id}`}>\n                <img className=\"contact-icon\" src={`/file/${row.id}`} alt=\"\" /> {cell}\n            </Link>\n        </section>\n    )\n}\n\nclass ConnectedList1 extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            contacts: props.contacts\n        };\n        this.addLinkFormatterForButton = this.addLinkFormatterForButton.bind(this)\n    }\n\n    componentDidMount() {\n        axios.get(\"http://localhost:8081/employee\").then(response => {\n            this.props.loadContacts({\n                contacts: response.data\n            })\n        })\n    }\n\n    addLinkFormatterForButton(cell, row) {\n        console.log(cell, row)\n        return (\n            <section>\n                <CustomizedDialogs employeeId={row.id} contact={row} refreshEmployee={this.props.refreshEmployee} type={\"employee\"}/>\n\n            </section>\n        )\n    }\n\n\n    render() {\n        const columns = [{\n            dataField: 'employeeId',\n            text: 'Employee Id',\n            sort: true,\n        },{\n            dataField: 'firstName',\n            text: 'Employee Name',\n            formatter: (value, contacts) => {\n                return value + ' ' + contacts.lastName\n            },\n            sort: true,\n        }, {\n            dataField: 'department',\n            text: 'Department',\n            sort: true,\n        },\n            {\n                dataField: '_id',\n                text: 'Action',\n                formatter: this.addLinkFormatterForButton\n            }\n        ];\n\n        const defaultSorted = [{\n            dataField: 'employeeId',\n            order: 'asc'\n        }];\n\n        return (\n\n            <ToolkitProvider\n                keyField=\"employeeId\"\n                data={ this.props.contacts }\n                columns={ columns }\n                search\n            >\n                {\n                    props => (\n                        <div>\n                            <hr />\n                            <SearchBar { ...props.searchProps } />\n                            <ClearSearchButton { ...props.searchProps } />\n                            <hr />\n                            <BootstrapTable\n                                { ...props.baseProps }\n                                bordered={false}\n                                inverse\n                                hover\n                                condensed\n                                striped\n                                responsive\n                                pagination={ paginationFactory() }\n                                defaultSorted={ defaultSorted }\n                                headerClasses=\"header-class\"\n                            />\n                        </div>\n                    )\n                }\n            </ToolkitProvider>\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators(actions, dispatch);\n}\nconst EmployeeList = connect(mapStateToProps, mapDispatchToProps)(ConnectedList1);\nexport default EmployeeList;","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport * as actions from '../actions/action_index';\n// import '../../css/styles.css';\nimport { Link } from 'react-router-dom';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport axios from \"axios\";\nimport EmployeeDialogs from \"./EmployeeDialogs\";\nimport CustomizedDialogs from \"./CustomizedDialogs\";\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\nimport 'react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\n\nconst { SearchBar, ClearSearchButton } = Search;\n\nfunction mapStateToProps(state) {\n    return {\n        //employee: state.contacts,\n        contacts: state.contacts,\n    };\n};\n\n\n\nclass ConnectedSecurityList extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            contacts: props.contacts\n        };\n        this.addLinkFormatterForButton = this.addLinkFormatterForButton.bind(this)\n    }\n\n    componentDidMount() {\n        axios.get(\"http://localhost:8081/securities\").then(response => {\n            this.props.loadContacts({\n                contacts: response.data\n            })\n        })\n    }\n\n    addLinkFormatterForButton(cell, row) {\n        console.log(cell, row)\n        return (\n            <section>\n                <CustomizedDialogs employeeId={row.id} contact={row} refreshEmployee={this.props.refreshEmployee} type={\"security\"}/>\n\n            </section>\n        )\n    }\n\n\n    render() {\n        const columns = [{\n            dataField: 'id',\n            text: 'Security Id',\n            sort: true,\n        },{\n            dataField: 'name',\n            text: 'Name',\n            sort: true,\n        },\n            {\n                dataField: '_id',\n                text: 'Action',\n                formatter: this.addLinkFormatterForButton\n            }\n        ];\n\n        const defaultSorted = [{\n            dataField: 'employeeId',\n            order: 'asc'\n        }];\n\n        return (\n\n            <ToolkitProvider\n                keyField=\"employeeId\"\n                data={ this.props.contacts }\n                columns={ columns }\n                search\n            >\n                {\n                    props => (\n                        <div>\n                            <hr />\n                            <SearchBar { ...props.searchProps } />\n                            <ClearSearchButton { ...props.searchProps } />\n                            <hr />\n                            <BootstrapTable\n                                { ...props.baseProps }\n                                bordered={false}\n                                inverse\n                                hover\n                                condensed\n                                striped\n                                responsive\n                                pagination={ paginationFactory() }\n                                defaultSorted={ defaultSorted }\n                                headerClasses=\"header-class\"\n                            />\n                        </div>\n                    )\n                }\n            </ToolkitProvider>\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators(actions, dispatch);\n}\nconst SecurityList = connect(mapStateToProps, mapDispatchToProps)(ConnectedSecurityList);\nexport default SecurityList;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport EmployeeList from \"./EmployeeList\";\nimport SecurityList from \"./SecurityList\";\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={3}>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n    },\n}));\n\nexport default function SimpleTabs(props) {\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\n                    <Tab label=\"Employee List\" {...a11yProps(0)} />\n                    <Tab label=\"Securities List\" {...a11yProps(1)} />\n\n                </Tabs>\n            </AppBar>\n            <TabPanel value={value} index={0}>\n                <EmployeeList contacts={props.contacts}  contactsCount={props.contactsCount} refreshEmployee={props.refreshData}/>\n            </TabPanel>\n            <TabPanel value={value} index={1}>\n                <SecurityList contacts={props.contacts}  contactsCount={props.contactsCount} refreshEmployee={props.refreshData}/>\n            </TabPanel>\n\n        </div>\n    );\n}\n","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {Link, Redirect} from \"react-router-dom\";\nimport axios from \"axios\";\nimport ContactList from \"./components/ContactList\";\nimport NavItem from \"./components/NavItem\";\nimport EmployeeList from \"./components/EmployeeList\";\nimport SimpleTabs from \"./components/SimpleDashboardTabs\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      contacts: []\n    };\n    this.state ={\n        contactsCount : 0\n    }\n    this.userName = localStorage.getItem(\"username\");\n    this.refreshData = this.refreshData.bind(this)\n  }\n\n\n\n\n  refreshData(){\n    console.log(\"shshsh event\")\n    this.setState({\n      contactsCount: this.state.contactsCount+1\n\n    });\n  }\n\n  render() {\n\n    if(localStorage.getItem(\"isAuthenticated\") === null) {\n      return   <Redirect to={{\n        pathname: '/login'}\n      } />\n    } else {\n      return (<section>\n            <NavItem refreshEmployee={this.refreshData} />\n\n            <h2>Welcome {this.userName},</h2>\n            <SimpleTabs contacts={this.state.contacts}  contactsCount={this.state.contactsCount} refreshEmployee={this.refreshData}/>\n          </section>);\n    }\n  }\n}\n\nexport default App;\n","import { SHOW_CONTACT } from \"../constants/action_type\";\nimport { CHANGE_CONTACT } from \"../constants/action_type\";\nimport { UPDATE_CONTACT } from \"../constants/action_type\";\nimport { LOAD_CONTACTS } from \"../constants/action_type\";\nimport { CLEAR_CONTACT } from \"../constants/action_type\";\nimport { SHOW_IMAGE } from \"../constants/action_type\";\n\nconst initialState = {\n  contacts: [],\n  showContactForm: false,\n  showDeleteButton: false,\n  imageUrl: \"\",\n  contact: { id: \"\", name: \"\", address: \"\", city: \"\", phone: \"\", email: \"\" }\n};\n\nfunction rootReducer(state = initialState, action) {\n  let tempState = { ...state };\n\n  if (action.type === LOAD_CONTACTS) {\n    tempState.contacts = action.payload.contacts;\n    return tempState;\n  }\n\n  if (action.type === SHOW_CONTACT) {\n    tempState.contact = action.payload.contact;\n    tempState.imageUrl = `/file/${action.payload.contact.id}`;\n\n    return tempState;\n  }\n\n  if (action.type === SHOW_IMAGE) {\n    tempState.imageUrl = `/file/${action.payload.contactId}`;\n\n    return tempState;\n  }\n\n  if (action.type === CHANGE_CONTACT) {\n    tempState.contact = action.payload.contact;\n    tempState.contact[action.payload.field] = action.payload.value;\n    return tempState;\n  }\n\n  if (action.type === UPDATE_CONTACT) {\n    // tempState.contacts = action.payload.contacts;\n    // tempState.showContactForm = action.payload.showContactForm;\n    // return tempState;\n\n    var payload = action.payload;\n    var index_of_contact = payload.contacts.findIndex(data => data._id === payload.updated_contact._id);\n    tempState.contacts[index_of_contact] = payload.updated_contact;\n    tempState.showContactForm = action.payload.showContactForm;\n    return tempState;\n  }\n\n  if (action.type === CLEAR_CONTACT) {\n    tempState.contact = { id: \"\", name: \"\", address: \"\", city: \"\", phone: \"\", email: \"\" };\n    return tempState;\n  }\n\n  return tempState;\n}\n\nexport default rootReducer;\n","import { createStore } from \"redux\";\nimport rootReducer from \"../reducers/reducer_index\";\n\nconst store = createStore(rootReducer);\nexport default store;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { bindActionCreators } from \"redux\";\nimport * as actions from \"../actions/action_index\";\nimport { connect } from \"react-redux\";\nimport NavItem from \"./NavItem\";\nimport MuiThemeProvider from \"material-ui/styles/MuiThemeProvider\";\nimport TextField from \"material-ui/TextField\";\nimport RaisedButton from \"material-ui/RaisedButton\";\nimport Dialog from \"@material-ui/core/Dialog/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions/DialogActions\";\nimport errorLogo from \"../error.ico\";\nimport Modal from \"@material-ui/core/Modal\";\nimport loading from \"../loading.gif\";\n\nfunction mapStateToProps(state) {\n  return {\n    contact: state.contact,\n    imageUrl: state.imageUrl\n  };\n}\n\nclass EditContact extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      contact: {},\n      selectedFile: null\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:8081/employee/\" + this.props.match.params.id).then(response => {\n      this.props.showContact({\n        contact: response.data\n      });\n    });\n  }\n\n  onChange = (field, value) => {\n    let currentContact = { ...this.props.contact };\n\n    this.props.changeContact({\n      contact: currentContact,\n      field: field,\n      value: value\n    });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const {  employeeId, firstName, lastName, address, phone,email,role,laptopId, department, employeeImage } = this.props.contact;\n\n    axios.put(\"http://localhost:8081/employee/\" + this.props.contact.id, {employeeId, firstName, lastName, address, phone,email,role,laptopId, department, employeeImage}).then(result => {\n      this.props.clearContact();\n      this.props.history.push(\"/\" );\n    });\n  };\n\n  render() {\n    return (\n      <section>\n        <NavItem/>\n        <div className=\"container\">\n          <MuiThemeProvider>\n            <div >\n              <br/>\n              <h3 style={{maxWidth: \"100%\"}}>Edit Employee</h3>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"inputFormBox\">\n                  <div className={\"row\"}>\n                    <div className=\"col-sm-6 col-md-6\">\n                      <TextField\n                          style={{maxWidth: \"100%\"}}\n                          errorText={this.state.idError}\n                          floatingLabelText=\"Employee ID\"\n                          value={this.props.contact.employeeId}\n                          onChange={e => this.onChange( 'employeeId',e.target.value)}\n                          onBlur={this.isDisabled}\n                      />\n                    </div>\n                    <div className=\"col-sm-6 col-md-6\">\n                      <TextField\n                          style={{maxWidth: \"100%\"}}\n                          errorText={this.state.firstNameError}\n                          value={this.props.contact.firstName}\n                          onChange={e => this.onChange( 'firstName',e.target.value)}\n                          floatingLabelText=\"First Name\"\n                          onBlur={this.isDisabled}\n                      />\n                    </div>\n                  </div>\n                  <div className={\"row\"}>\n                    <div className=\"col-sm-6 col-md-6\">\n                      <TextField\n                          style={{maxWidth: \"100%\"}}\n                          errorText={this.state.lastNameError}\n                          value={this.props.contact.lastName}\n                          onChange={e => this.onChange( 'lastName',e.target.value)}\n                          floatingLabelText=\"Last Name\"\n                          onBlur={this.isDisabled}\n                      />\n                    </div>\n                    <div className=\"col-sm-6 col-md-6\">\n                      <TextField\n                          style={{maxWidth: \"100%\"}}\n                          value={this.props.contact.address}\n                          onChange={e => this.onChange( 'address',e.target.value)}\n                          floatingLabelText=\"Address\"\n                          onBlur={this.isDisabled}\n                      />\n                    </div>\n                  </div>\n                  <div className={\"row\"}>\n                    <div className=\"col-sm-6 col-md-6\">\n                      <TextField\n                          style={{maxWidth: \"100%\"}}\n                          errorText={this.state.emailError}\n                          value={this.props.contact.email}\n                          onChange={e => this.onChange( 'email',e.target.value)}\n                          floatingLabelText=\"Email\"\n                          onBlur={this.isDisabled}\n                      />\n                    </div>\n\n                    <div className=\"col-sm-6 col-md-6\">\n                      <TextField\n                          style={{maxWidth: \"100%\"}}\n                          errorText={this.state.phoneError}\n                          value={this.props.contact.phone}\n                          onChange={e => this.onChange( 'phone',e.target.value)}\n                          floatingLabelText=\"Phone\"\n                          onBlur={this.isDisabled}\n                      />\n                    </div>\n                  </div>\n                  <div className={\"row\"}>\n                    <div className=\"col-sm-6 col-md-6\">\n                      <TextField\n                          style={{maxWidth: \"100%\"}}\n                          //errorText={this.state.departmentError}\n                          value={this.props.contact.department}\n                          onChange={e => this.onChange( 'department',e.target.value)}\n                          floatingLabelText=\"Department\"\n                          onBlur={this.isDisabled}\n                      />\n                    </div>\n\n                    <div className=\"col-sm-6 col-md-6\">\n                      <TextField\n                          style={{maxWidth: \"100%\"}}\n                          errorText={this.state.laptopError}\n                          value={this.props.contact.laptopId}\n                          onChange={e => this.onChange( 'laptopId',e.target.value)}\n                          floatingLabelText=\"Laptop Id\"\n                          onBlur={this.isDisabled}\n                      />\n                    </div>\n                  </div>\n                </div>\n                <br></br>\n                <div className={\"row\"}>\n                  <div className=\"col-sm-12 col-md-12\">\n                    <RaisedButton style={{maxWidth: \"100%\"}} label=\"Update Employee\" type='submit' primary={true}\n                                  disabled={this.state.submitDisabled}/>\n                  </div>\n                </div>\n                <Dialog\n                    open={this.state.success}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    className=\"dialog\"\n                >\n                  <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                      Employee updated successfully!!\n                    </DialogContentText>\n                  </DialogContent>\n                  <DialogActions>\n                    <RaisedButton onClick={this.handleCloseSuccess} primary={true} className=\"dialogButton\" type='submit'>\n                      OK\n                    </RaisedButton>\n                  </DialogActions>\n                </Dialog>\n              </form>\n            </div>\n          </MuiThemeProvider>\n          <Modal open={this.state.loading} style={{backgroundColor: \"rgba(255,255,255, 0.2)\", maxWidth: \"80%\"}}>\n            <div className=\"loadingSecurity\"><img src={loading} alt=\"loading\" height=\"100\"/></div>\n          </Modal>\n\n        </div>\n      </section>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(actions, dispatch);\n};\n\nconst Edit = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EditContact);\nexport default Edit;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport NavItem from \"./NavItem\";\nimport * as actions from \"../actions/action_index\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { file } from \"@babel/types\";\nimport \"./../App.css\";\n\nfunction mapStateToProps(state) {\n  return {\n    contact: state.contact,\n    imageUrl: state.imageUrl\n  };\n}\n\nclass ShowContact extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:8081/employee/\" + this.props.match.params.id).then(response => {\n      let data = response.data;\n      let contact = {\n        id: data.id,\n        name: data.name,\n        address: data.address,\n        city: data.city,\n        phone: data.phone,\n        email: data.email,\n        contactImage: data.contactImage\n      };\n      this.props.showContact({\n        contact: contact\n      });\n    });\n  }\n\n  delete(id) {\n    console.log(id);\n    axios.delete(\"http://localhost:8081/employee/\" + id).then(result => {\n      this.props.handleClose();\n    });\n  }\n\n  render() {\n    // let imageUrl = null;\n    // if (this.props.contact.id !== \"\") {\n    //   imageUrl = `/file/${this.props.contact.id}`;\n    // }\n    return (\n      <section>\n        <NavItem />\n        <div class=\"container\">\n          <div class=\"panel panel-default\">\n            <div class=\"panel-heading\">\n              <h3 class=\"panel-title\">Contact Details</h3>\n            </div>\n            <div class=\"panel-body\">\n              <dl>\n                <dd>\n                  {this.props.imageUrl && <img className=\"contact-image\" src={this.props.imageUrl} alt=\"contact\" />}\n                </dd>\n                <dt>Name:</dt>\n                <dd>{this.props.contact.name}</dd>\n                <dt>Address:</dt>\n                <dd>{this.props.contact.address}</dd>\n                <dt>City:</dt>\n                <dd>{this.props.contact.city}</dd>\n                <dt>Phone Number:</dt>\n                <dd>{this.props.contact.phone}</dd>\n                <dt>Email Address:</dt>\n                <dd>{this.props.contact.email}</dd>\n              </dl>\n              <Link to={`/edit/${this.props.contact.id}`} className=\"btn btn-success\">\n                Edit\n              </Link>\n              &nbsp;\n              <button onClick={this.delete.bind(this, this.props.contact.id)} className=\"btn btn-danger\">\n                Delete\n              </button>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(actions, dispatch);\n};\nconst Show = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ShowContact);\nexport default Show;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { bindActionCreators } from \"redux\";\nimport * as actions from \"../actions/action_index\";\nimport { connect } from \"react-redux\";\nimport NavItem from \"./NavItem\";\n\nfunction mapStateToProps(state) {\n    return {\n        contact: state.contact,\n        imageUrl: state.imageUrl\n    };\n}\n\nclass Logo extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        this.props.showImage({\n            contactId: this.props.match.params.id\n        });\n    }\n\n    onChangeContactImage = event => {\n        const data = new FormData();\n        data.append(\"file\", event.target.files[0]);\n        let contactId = this.props.match.params.id;\n\n        axios.post(\"http://localhost:8081/contact/upload/\" + contactId, data, {}).then(response => {\n            this.props.history.push(\"/\");\n        });\n    };\n\n    render() {\n        return (\n            <section>\n                <NavItem />\n                <div className=\"container\">\n                    <div className=\"panel panel-default\">\n                        <div className=\"panel-heading\">\n                            <h3 className=\"panel-title\">Edit Contact Image</h3>\n                        </div>\n                        <div className=\"panel-body\">\n                            <form onSubmit={this.onSubmit} enctype=\"multipart/form-data\">\n                                <div className=\"form-group\">\n                                    {this.props.imageUrl && <img className=\"contact-image\" src={this.props.imageUrl} alt=\"contact\" />}\n                                    <input type=\"file\" name=\"file\" onChange={event => this.onChangeContactImage(event)} />\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return bindActionCreators(actions, dispatch);\n};\n\nconst ContactImage = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Logo);\nexport default ContactImage;\n","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from \"axios\";\nimport * as actions from \"../actions/action_index\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport NavItem from \"./NavItem\";\n\nfunction mapStateToProps(state) {\n  return {\n    contact: state.contact\n  };\n}\n\nclass AddUsers extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.props.clearContact();\n  }\n  // onChange = (field, value) => {\n  //   let currentContact = { ...this.props.contact };\n\n  //   this.props.changeContact({\n  //     contact: currentContact,\n  //     field: field,\n  //     value: value\n  //   });\n  // };\n\n  onSubmit = () => {\n    const [username, password, role] = [\"test\", \"test\", \"user\"];\n\n    axios.post(\"http://localhost:8081/users\", { username, password, role }).then(result => {\n      this.props.history.push(\"/\");\n    });\n  };\n\n  render() {\n    return (\n      // <section>\n      //   <NavItem />\n      //   <div class=\"container\">\n      //     <div class=\"panel panel-default\">\n      //       <div class=\"panel-heading\">\n      //         <h3 class=\"panel-title\">ADD CONTACT</h3>\n      //       </div>\n      //       <div class=\"panel-body\">\n      //         <h4>\n      //           <Link to=\"/\">\n      //             <span class=\"glyphicon glyphicon-th-list\" aria-hidden=\"true\" /> Contacts List\n      //           </Link>\n      //         </h4>\n      //         <form onSubmit={this.onSubmit}>\n      //           <div class=\"form-group\">\n      //             <label for=\"isbn\">Name:</label>\n      //             <input\n      //               type=\"text\"\n      //               class=\"form-control\"\n      //               name=\"name\"\n      //               value={name}\n      //               onChange={event => this.onChange(\"name\", event.target.value)}\n      //               placeholder=\"Name\"\n      //             />\n      //           </div>\n      //           <div class=\"form-group\">\n      //             <label for=\"title\">Address:</label>\n      //             <input\n      //               type=\"text\"\n      //               class=\"form-control\"\n      //               name=\"address\"\n      //               value={address}\n      //               onChange={event => this.onChange(\"address\", event.target.value)}\n      //               placeholder=\"Address\"\n      //             />\n      //           </div>\n      //           <div class=\"form-group\">\n      //             <label for=\"author\">City:</label>\n      //             <input\n      //               type=\"text\"\n      //               class=\"form-control\"\n      //               name=\"city\"\n      //               value={city}\n      //               onChange={event => this.onChange(\"city\", event.target.value)}\n      //               placeholder=\"City\"\n      //             />\n      //           </div>\n      //           <div class=\"form-group\">\n      //             <label for=\"published_date\">Phone:</label>\n      //             <input\n      //               type=\"text\"\n      //               class=\"form-control\"\n      //               name=\"phone\"\n      //               value={phone}\n      //               onChange={event => this.onChange(\"phone\", event.target.value)}\n      //               placeholder=\"Phone Number\"\n      //             />\n      //           </div>\n      //           <div class=\"form-group\">\n      //             <label for=\"publisher\">Email:</label>\n      //             <input\n      //               type=\"email\"\n      //               class=\"form-control\"\n      //               name=\"email\"\n      //               value={email}\n      //               onChange={event => this.onChange(\"email\", event.target.value)}\n      //               placeholder=\"Email Address\"\n      //             />\n      //           </div>\n      //           <button type=\"submit\" class=\"btn btn-info\">\n      //             Submit\n      //           </button>\n      //         </form>\n      //       </div>\n      //     </div>\n      //   </div>\n      // </section>\n      <section>\n        <NavItem />\n        <button type=\"button\" class=\"btn btn-info\" onClick={() => this.onSubmit()}>\n          Add User\n        </button>\n      </section>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(actions, dispatch);\n};\n\nconst Users = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AddUsers);\n\nexport default Users;\n","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from \"axios\";\nimport {Link, Redirect} from \"react-router-dom\";\nimport { withRouter } from 'react-router-dom'\nimport \"./Login.css\";\nimport logo from \"../ibslogo.svg\"\nimport errorLogo from \"../error.ico\"\nimport loading from \"../loading.gif\";\n\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport TextField from 'material-ui/TextField';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport Modal from '@material-ui/core/Modal';\n\nclass Login extends Component {\n\n  //Setting up the component states\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      usernameError: \"\",\n      passwordError: \"\",\n      submitDisabled: true,\n      credentialError: false,\n      loading: false\n    };\n    this.isDisabled = this.isDisabled.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  //To assign entered value to state variable\n  changeValue(e, type) {\n    const value = e.target.value;\n    const nextState = {};\n    nextState[type] = value;\n    this.setState(nextState);\n  }\n\n  //For the pop up\n  handleClose() {\n    this.setState({credentialError: false});\n  }\n\n  //For validating username and password\n  isDisabled() {\n    const {username, password} = this.state;\n    let isUsernameValid = false;\n    let isPasswordValid = false;\n    let usernameRegex = /A-[0-9]{4}$/i;\n\n    if (username === \"admin\") {\n      isUsernameValid = true;\n      this.setState({usernameError: null});\n    } else if (username === \"\") {\n        this.setState({usernameError: null});\n    } else if (username.match(usernameRegex)) {\n        isUsernameValid = true;\n        this.setState({usernameError: null});\n    } else {\n        this.setState({usernameError: \"Please enter a valid Employee ID\"});\n    }\n\n    if (password === \"\") {\n      this.setState({passwordError: null});\n    } else if (password.length >= 5 || password.indexOf(' ') === 0) {\n        isPasswordValid = true;\n        this.setState({passwordError: null});\n    } else if(this.state.password.length < 5){\n        this.setState({passwordError: \"Your password must be at least 5 characters\"});\n    } else {\n        this.setState({passwordError: \"Please enter a valid password\"});\n    }\n    if (isUsernameValid && isPasswordValid) {\n      this.setState({submitDisabled: false});\n    }\n    if (!isUsernameValid || !isPasswordValid) {\n      this.setState({submitDisabled: true});\n    }\n\n  }\n\n  //Perform user authentication\n  onSubmit = e => {\n    e.preventDefault();\n\n    const {username, password} = this.state;\n\n    if (username === \"admin\" && password === \"admin\") {\n\n      console.log(\"Admin is authenticated\");\n      localStorage.setItem(\"isAuthenticated\", true);\n      localStorage.setItem(\"username\", \"admin\");\n      localStorage.setItem(\"role\", \"admin\");\n      this.props.history.push(\"/\");\n\n    } else {\n      this.setState({loading: true});\n      let empId = username.toUpperCase();\n      axios.post(\"/login\", {empId, password}).then(result => {\n        this.setState({loading: false});\n        if (result.data === true) {\n          console.log(\"User is authenticated\");\n          localStorage.setItem(\"isAuthenticated\", true);\n          localStorage.setItem(\"username\", empId);\n          localStorage.setItem(\"role\", \"security\");\n          this.props.history.push(\"/\");\n        } else {\n          this.setState({credentialError: true});\n        }\n      });\n\n    }\n  };\n\n  render() {\n      if(localStorage.getItem(\"isAuthenticated\") !== null) {\n          return   <Redirect to={{\n              pathname: '/'}\n          } />\n      } else {\n          return (\n              <div className=\"container\">\n                  <MuiThemeProvider>\n                      <div className=\"login\">\n                          <img src={logo} alt=\"logo\" style={{maxWidth: \"100%\"}}/>\n                          <br/>\n                          <form onSubmit={this.onSubmit}>\n                              <br/>\n                              <TextField\n                                  style={{maxWidth: \"100%\"}}\n                                  errorText={this.state.usernameError}\n                                  hintText=\"Enter your Employee ID\"\n                                  floatingLabelText=\"Employee ID\"\n                                  onChange={e => this.changeValue(e, 'username')}\n                                  onBlur={this.isDisabled}\n                              />\n                              <br/>\n                              <TextField\n                                  style={{maxWidth: \"100%\"}}\n                                  type=\"password\"\n                                  errorText={this.state.passwordError}\n                                  hintText=\"Enter your Password\"\n                                  floatingLabelText=\"Password\"\n                                  onChange={e => this.changeValue(e, 'password')}\n                                  onBlur={this.isDisabled}\n                              />\n                              <br/>\n                              <br/>\n                              <RaisedButton style={{maxWidth: \"100%\"}} label=\"Sign In\" type='submit' primary={true}\n                                            disabled={this.state.submitDisabled}/>\n                              <Dialog\n                                  open={this.state.credentialError}\n                                  aria-labelledby=\"alert-dialog-title\"\n                                  aria-describedby=\"alert-dialog-description\"\n                                  className=\"dialog\"\n                              >\n                                  <DialogContent>\n                                      <DialogContentText id=\"alert-dialog-description\">\n                                          <img src={errorLogo} alt=\"error logo\" style={{maxWidth: \"100%\"}} height={50}/>\n                                          <br/>\n                                          Invalid Credentials. Please try again\n                                          <br/>\n                                      </DialogContentText>\n                                  </DialogContent>\n                                  <DialogActions>\n                                      <RaisedButton onClick={this.handleClose} primary={true} className=\"dialogButton\"\n                                                    type='submit'>\n                                          OK\n                                      </RaisedButton>\n                                  </DialogActions>\n                              </Dialog>\n                          </form>\n                      </div>\n                  </MuiThemeProvider>\n                  <Modal open={this.state.loading} style={{backgroundColor: \"rgba(255,255,255, 0.2)\"}}>\n                      <div className=\"loadingLogin\"><img src={loading} alt=\"loading\" height=\"100\"/></div>\n                  </Modal>\n              </div>\n          );\n      }\n  }\n}\n\nexport default withRouter(Login);\n","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from \"axios\";\nimport * as actions from \"../actions/action_index\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport NavItem from \"./NavItem\";\nimport { withRouter } from 'react-router-dom'\n\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport TextField from 'material-ui/TextField';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport Modal from '@material-ui/core/Modal';\nimport loading from \"../loading.gif\";\nimport \"./Security.css\";\nimport errorLogo from \"../error.ico\";\nimport {FormLabel} from \"@material-ui/core\";\n\n\nclass Security extends Component {\n\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: \"\",\n      name: \"\",\n      password: \"\",\n      phone: \"\",\n      email: \"\",\n      location: \"\",\n      buildingNo: \"\",\n      idError: \"\",\n      nameError: \"\",\n      passwordError: \"\",\n      phoneError: \"\",\n      emailError: \"\",\n      locationError:\"\",\n      submitDisabled: true,\n      success: false,\n      failure: false,\n      loading: false\n    };\n    this.isDisabled = this.isDisabled.bind(this);\n    this.handleCloseSuccess = this.handleCloseSuccess.bind(this);\n    this.handleCloseFailure = this.handleCloseFailure.bind(this);\n  }\n\n  changeValue(e, type) {\n    const value = e.target.value;\n    const nextState = {};\n    nextState[type] = value;\n    this.setState(nextState);\n  }\n\n  //For the pop up\n  handleCloseSuccess() {\n    this.setState({success: false});\n    this.props.history.push(\"/security\");\n  }\n\n  handleCloseFailure() {\n    this.setState({failure: false});\n  }\n\n  isDisabled() {\n    const {id, name, password, email, phone, location} = this.state;\n    let isIdValid = false;\n    let isNameValid = false;\n    let isPasswordValid = false;\n    let idRegex = /A-[0-9]{4}$/;\n    let nameRegex = /^[a-zA-Z ]*$/;\n    let emailRegex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n    let phoneRegex = /[1-9][0-9]{9}$/;\n    let isEmailValid = false;\n    let isPhoneValid = false;\n    let isLocationValid = false;\n\n    if (id === \"\") {\n      this.setState({idError: null});\n    } else if (id.match(idRegex)) {\n      isIdValid = true;\n      this.setState({idError: null});\n    } else {\n      this.setState({idError: \"Please enter a valid Employee ID\"});\n    }\n\n\n    if (name === \"\") {\n      this.setState({nameError: null});\n    } else if (name.match(nameRegex)) {\n      isNameValid = true;\n      this.setState({nameError: null});\n    } else {\n      this.setState({nameError: \"Please enter a valid Name\"});\n    }\n\n    if (location === \"\") {\n      this.setState({locationError: null});\n    } else if (location.match(nameRegex)) {\n      isLocationValid = true;\n      this.setState({locationError: null});\n    } else {\n      this.setState({locationError: \"Please enter a valid Location\"});\n    }\n\n    if (email === \"\") {\n      this.setState({emailError: null});\n    } else if (email.match(emailRegex)) {\n      isEmailValid = true;\n      this.setState({emailError: null});\n    } else {\n      this.setState({emailError: \"Please enter a valid Email\"});\n    }\n\n    if (phone === \"\") {\n      this.setState({phoneError: null});\n    } else if (phone.match(phoneRegex) && phone.length === 10) {\n      isPhoneValid = true;\n      this.setState({phoneError: null});\n    } else {\n      this.setState({phoneError: \"Please enter a valid Phone\"});\n    }\n\n\n\n    if (password === \"\") {\n      this.setState({passwordError: null});\n    } else if (password.length >= 5 || password.indexOf(' ') === 0) {\n      isPasswordValid = true;\n      this.setState({passwordError: null});\n    } else if (this.state.password.length < 5) {\n      this.setState({passwordError: \"Your password must be at least 5 characters\"});\n    } else {\n      this.setState({passwordError: \"Please enter a valid password\"});\n    }\n\n    if (isIdValid && isNameValid && isPasswordValid && isEmailValid && isPhoneValid) {\n      this.setState({submitDisabled: false});\n    }\n    if (!isIdValid || !isNameValid || !isPasswordValid || !isEmailValid || !isPhoneValid || !isLocationValid) {\n      this.setState({submitDisabled: true});\n    }\n\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const {id, name, password, email, phone, location, buildingNo} = this.state;\n    this.setState({loading: true});\n    axios.post(\"/securities\", {id, name, password, email, phone, location, buildingNo}).then(result => {\n      let data = result.data;\n      this.setState({loading: false});\n      if(data === \"\") {\n        this.setState({failure: true});\n      } else {\n        this.setState({success: true});\n      }\n    });\n  };\n\n  render() {\n    return (\n        <section>\n        <NavItem/>\n        <div className=\"container\" >\n          <MuiThemeProvider>\n            <div>\n              <br/>\n              <h3 style={{maxWidth: \"100%\"}}>Add Security User</h3>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"inputFormBox\">\n                  <div className={\"row\"}>\n                    <div className=\"col-sm-6 col-md-6\">\n                <TextField\n                    style={{maxWidth: \"100%\"}}\n                    errorText={this.state.idError}\n                    hintText=\"Enter Security ID\"\n                    floatingLabelText=\"Security ID\"\n                    onChange={e => this.changeValue(e, 'id')}\n                    onBlur={this.isDisabled}\n                />\n                    </div>\n                    <div className=\"col-sm-6 col-md-6\">\n                <TextField\n                    style={{maxWidth: \"100%\"}}\n                    errorText={this.state.nameError}\n                    hintText=\"Enter Security Name\"\n                    floatingLabelText=\"Security Name\"\n                    onChange={e => this.changeValue(e, 'name')}\n                    onBlur={this.isDisabled}\n                />\n                </div>\n                  </div>\n                  <div className={\"row\"}>\n                    <div className=\"col-sm-6 col-md-6\">\n                <TextField\n                    style={{maxWidth: \"100%\"}}\n                    type=\"password\"\n                    errorText={this.state.passwordError}\n                    hintText=\"Enter your Password\"\n                    floatingLabelText=\"Password\"\n                    onChange={e => this.changeValue(e, 'password')}\n                    onBlur={this.isDisabled}\n                />\n                </div>\n                    <div className=\"col-sm-6 col-md-6\">\n                <TextField\n                    style={{maxWidth: \"100%\"}}\n                    errorText={this.state.emailError}\n                    hintText=\"Enter your Email\"\n                    floatingLabelText=\"Email\"\n                    onChange={e => this.changeValue(e, 'email')}\n                    onBlur={this.isDisabled}\n                />\n                    </div></div>\n                  <div className={\"row\"}>\n                    <div className=\"col-sm-6 col-md-6\">\n                <TextField\n                    style={{maxWidth: \"100%\"}}\n                    errorText={this.state.phoneError}\n                    hintText=\"Enter your Phone\"\n                    floatingLabelText=\"Phone\"\n                    onChange={e => this.changeValue(e, 'phone')}\n                    onBlur={this.isDisabled}\n                />\n                </div>\n                    <div className=\"col-sm-6 col-md-6\">\n                <TextField\n                    style={{maxWidth: \"100%\"}}\n                    errorText={this.state.locationError}\n                    hintText=\"Enter your Location\"\n                    floatingLabelText=\"Location\"\n                    onChange={e => this.changeValue(e, 'location')}\n                    onBlur={this.isDisabled}\n                />\n                </div>\n                  </div>\n                  <div className={\"row\"}>\n                    <div className=\"col-sm-6 col-md-6\">\n                <TextField\n                    style={{maxWidth: \"100%\"}}\n                    hintText=\"Enter your Building\"\n                    floatingLabelText=\"Building\"\n                    onChange={e => this.changeValue(e, 'buildingNo')}\n                    onBlur={this.isDisabled}\n                />\n                    </div>\n                  </div>\n                </div>\n                <RaisedButton style={{maxWidth: \"100%\"}} label=\"Add Security\" type='submit' primary={true}\n                              disabled={this.state.submitDisabled}/>\n                <Dialog\n                    open={this.state.success}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    className=\"dialog\"\n                >\n                  <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                      Security added successfully\n                    </DialogContentText>\n                  </DialogContent>\n                  <DialogActions>\n                    <RaisedButton onClick={this.handleCloseSuccess} primary={true} className=\"dialogButton\" type='submit'>\n                      OK\n                    </RaisedButton>\n                  </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.state.failure}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    className=\"dialog\"\n                >\n                  <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                      <img src={errorLogo} alt=\"error logo\" style={{maxWidth:\"100%\"}} height={50}/>\n                    <br/>\n                      Employee ID already exists. Please try again\n                      <br/>\n                    </DialogContentText>\n                  </DialogContent>\n                  <DialogActions>\n                    <RaisedButton onClick={this.handleCloseFailure} primary={true} className=\"dialogButton\" type='submit'>\n                      OK\n                    </RaisedButton>\n                  </DialogActions>\n                </Dialog>\n              </form>\n            </div>\n          </MuiThemeProvider>\n          <Modal open={this.state.loading} style={{backgroundColor: \"rgba(255,255,255, 0.2)\", maxWidth: \"80%\"}}>\n            <div className=\"loadingSecurity\"><img src={loading} alt=\"loading\" height=\"100\"/></div>\n          </Modal>\n        </div>\n        </section>\n    );\n  }\n}\n\nexport default withRouter(Security);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { bindActionCreators } from \"redux\";\nimport * as actions from \"../actions/action_index\";\nimport { connect } from \"react-redux\";\nimport NavItem from \"./NavItem\";\n\nfunction mapStateToProps(state) {\n    return {\n        contact: state.contact,\n        imageUrl: state.imageUrl\n    };\n}\n\nclass EditSecurity extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            contact: {},\n            selectedFile: null\n        };\n    }\n\n    componentDidMount() {\n        axios.get(\"http://localhost:8081/securities/\" + this.props.match.params.id).then(response => {\n            this.props.showContact({\n                contact: response.data\n            });\n        });\n    }\n\n    onChange = (field, value) => {\n        let currentContact = { ...this.props.contact };\n\n        this.props.changeContact({\n            contact: currentContact,\n            field: field,\n            value: value\n        });\n    };\n\n    onSubmit = e => {\n        e.preventDefault();\n        const {  id, name, email, phone, location,buildingNo,role} = this.props.contact;\n\n        axios.put(\"http://localhost:8081/securities/\" + this.props.contact.id, {id, name, email, phone, location,buildingNo}).then(result => {\n            this.props.clearContact();\n            this.props.history.push(\"/\" );\n        });\n    };\n\n    render() {\n        return (\n            <section>\n                <NavItem/>\n\n                <div className=\"container\">\n                    <div className=\"panel panel-default\">\n                        <div className=\"panel-heading\">\n                            <h3 className=\"panel-title\">EDIT Security</h3>\n                        </div>\n                        <div className=\"panel-body\">\n                            <form onSubmit={this.onSubmit}>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"employeeId\">Employee Id</label>\n                                    <input disabled={false}\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        name=\"id\"\n                                        value={this.props.contact.id}\n                                        onChange={event => this.onChange(\"id\", event.target.value)}\n                                        placeholder=\"Security Id\"\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"firstName\">First Name</label>\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        name=\"name\"\n                                        value={this.props.contact.name}\n                                        onChange={event => this.onChange(\"name\", event.target.value)}\n                                        placeholder=\" Name\"\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label for=\"title\">Address:</label>\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        name=\"location\"\n                                        value={this.props.contact.location}\n                                        onChange={event => this.onChange(\"location\", event.target.value)}\n                                        placeholder=\"Location\"\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label for=\"published_date\">Phone Number:</label>\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        name=\"phone\"\n                                        value={this.props.contact.phone}\n                                        onChange={event => this.onChange(\"phone\", event.target.value)}\n                                        placeholder=\"Phone Number\"\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"department\">Building No</label>\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        name=\"buildingNo\"\n                                        value={this.props.contact.department}\n                                        onChange={event => this.onChange(\"buildingNo\", event.target.value)}\n                                        placeholder=\"Building No\"\n                                    />\n                                </div>\n\n\n                                <div className=\"form-group\">\n                                    <label for=\"description\">Email:</label>\n                                    <input\n                                        type=\"email\"\n                                        className=\"form-control\"\n                                        name=\"email\"\n                                        value={this.props.contact.email}\n                                        onChange={event => this.onChange(\"email\", event.target.value)}\n                                        placeholder=\"Email Address\"\n                                    />\n                                </div>\n\n                                <button  type=\"submit\" className=\"btn btn-info\">\n                                    Update\n                                </button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return bindActionCreators(actions, dispatch);\n};\n\nconst SecurityEdit = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditSecurity);\nexport default SecurityEdit;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\nimport \"./App.css\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store_index\";\n\nimport Edit from \"./components/Edit\";\nimport Create from \"./components/Create\";\nimport Show from \"./components/Show\";\nimport ContactImage from \"./components/ContactImage\";\nimport Users from \"./components/Users\";\nimport Login from \"./components/Login\";\nimport Security from \"./components/Security\";\n\nimport * as serviceWorker from \"./serviceWorker\";\nimport SecurityEdit from \"./components/SecurityEdit\";\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <div>\n        <Switch>\n          <Route exact path=\"/\" component={App} />\n          <Route path=\"/edit/:id\" render={props => <Edit {...props} />} />\n          <Route path=\"/editsecu/:id\" render={props => <SecurityEdit {...props} />} />\n          <Route path=\"/create\" component={Create} />\n          <Route path=\"/show/:id\" component={Show} />\n          <Route path=\"/logo/:id\" component={ContactImage} />\n          <Route path=\"/users\" component={Users} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/security\" component={Security} />\n        </Switch>\n      </div>\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/error.7746519f.ico\";"],"sourceRoot":""}