{"version":3,"sources":["constants/action_type.js","actions/action_index.js","components/ContactList.jsx","components/NavItem.jsx","App.js","reducers/reducer_index.js","store/store_index.js","components/Edit.js","components/Create.js","components/Show.js","components/ContactImage.jsx","components/Users.js","serviceWorker.js","index.js"],"names":["CLEAR_CONTACT","SHOW_CONTACT","CHANGE_CONTACT","UPDATE_CONTACT","LOAD_CONTACTS","SHOW_IMAGE","clearContact","payload","type","showContact","showImage","loadContacts","changeContact","updateContact","addLinkFormatter","cell","row","console","log","react_default","a","createElement","react_router_dom","to","concat","id","className","src","alt","ConnectedList","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_this","axios","get","then","response","contacts","data","columns","dataField","text","formatter","length","lib_default","keyField","bordered","striped","hover","condensed","headerClasses","React","Component","ContactList","connect","state","dispatch","bindActionCreators","actions","NavItem","aria-hidden","onClick","window","location","pathname","App","components_NavItem","components_ContactList","initialState","showContactForm","showDeleteButton","imageUrl","contact","name","address","city","phone","email","rootReducer","arguments","undefined","action","tempState","objectSpread","contactId","field","value","index_of_contact","findIndex","_id","updated_contact","store","createStore","EditContact","onChange","currentContact","onSubmit","e","preventDefault","_this$props$contact","put","result","history","push","match","params","selectedFile","_this2","_this3","for","event","target","placeholder","Edit","CreateContact","post","_this$props$contact2","class","Create","ShowContact","contactImage","delete","bind","Show","Logo","onChangeContactImage","FormData","append","files","enctype","ContactImage","AddUsers","username","password","role","Users","Boolean","hostname","ReactDOM","render","es","react_router","exact","path","component","components_Edit","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.43440995.chunk.js","sourcesContent":["export const CLEAR_CONTACT = \"CLEAR_CONTACT\";\r\nexport const SHOW_CONTACT = \"SHOW_CONTACT\";\r\nexport const CHANGE_CONTACT = \"CHANGE_CONTACT\";\r\nexport const UPDATE_CONTACT = \"UPDATE_CONTACT\";\r\nexport const LOAD_CONTACTS = \"LOAD_CONTACTS\";\r\nexport const SHOW_IMAGE = \"SHOW_IMAGE\";\r\n","import { CLEAR_CONTACT } from \"./../constants/action_type\";\r\nimport { SHOW_CONTACT } from \"./../constants/action_type\";\r\nimport { LOAD_CONTACTS } from \"./../constants/action_type\";\r\nimport { CHANGE_CONTACT } from \"./../constants/action_type\";\r\nimport { UPDATE_CONTACT } from \"./../constants/action_type\";\r\nimport { SHOW_IMAGE } from \"./../constants/action_type\";\r\n\r\nexport const clearContact = payload => {\r\n  return { type: CLEAR_CONTACT, payload };\r\n};\r\n\r\nexport const showContact = payload => {\r\n  return { type: SHOW_CONTACT, payload };\r\n};\r\n\r\nexport const showImage = payload => {\r\n  return { type: SHOW_IMAGE, payload };\r\n};\r\n\r\nexport const loadContacts = payload => {\r\n  return { type: LOAD_CONTACTS, payload };\r\n};\r\n\r\nexport const changeContact = payload => {\r\n  return { type: CHANGE_CONTACT, payload };\r\n};\r\n\r\nexport const updateContact = payload => {\r\n  return { type: UPDATE_CONTACT, payload };\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport * as actions from './../actions/action_index';\r\n// import '../../css/styles.css';\r\nimport { Link } from 'react-router-dom';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport axios from \"axios\";\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        contacts: state.contacts,\r\n    };\r\n};\r\n\r\nfunction addLinkFormatter(cell, row) {\r\n    console.log(cell, row)\r\n    return (\r\n        <section>\r\n            <Link to={`/show/${row.id}`}>\r\n                <img className=\"contact-icon\" src={`/file/${row.id}`} alt=\"\" /> {cell}\r\n            </Link>\r\n        </section>\r\n    )\r\n}\r\n\r\nclass ConnectedList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(\"/contacts\").then(response => {\r\n            this.props.loadContacts({\r\n                contacts: response.data\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const columns = [{\r\n            dataField: 'name',\r\n            text: 'Name',\r\n            formatter: addLinkFormatter\r\n        }, {\r\n            dataField: 'address',\r\n            text: 'Address'\r\n        }, {\r\n            dataField: 'city',\r\n            text: 'City'\r\n        }, {\r\n            dataField: 'email',\r\n            text: 'Email'\r\n        }, {\r\n            dataField: 'phone',\r\n            text: 'Phone'\r\n        }\r\n        ];\r\n        return (\r\n\r\n            <section className=\"col-12 col-sm-12 col-md-12 col-lg-12\">\r\n                {this.props.contacts.length > 0 &&\r\n                    <BootstrapTable\r\n                        keyField='_id'\r\n                        data={this.props.contacts}\r\n                        columns={columns}\r\n                        bordered={false}\r\n                        striped\r\n                        hover\r\n                        condensed\r\n                        headerClasses=\"header-class\"\r\n                    />\r\n                }\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators(actions, dispatch);\r\n}\r\nconst ContactList = connect(mapStateToProps, mapDispatchToProps)(ConnectedList);\r\nexport default ContactList;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./../App.css\";\r\n\r\nclass NavItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark \">\r\n                <Link className=\"navbar-brand\" to={`/`}>CMS</Link>\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    <li className=\"nav-item active\">\r\n                        <Link to={`/`}><i className=\"fa fa-tachometer\" aria-hidden=\"true\"></i> Dashboard</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link to={`/create`}> <i className=\"fa fa-plus\" aria-hidden=\"true\"></i> Add Contact</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link to={`/users`}> <i className=\"fa fa-user\" aria-hidden=\"true\"></i> Add Users</Link>\r\n                    </li>\r\n                </ul>\r\n\r\n                <ul className=\"navbar-nav ml-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" onClick={() => window.location.pathname = \"/logout\"}>\r\n                            Logout <i className=\"fa fa-sign-out\" aria-hidden=\"true\"></i>\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavItem;\r\n","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport ContactList from \"./components/ContactList\";\nimport NavItem from \"./components/NavItem\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      contacts: []\n    };\n  }\n\n  render() {\n    return (\n      <section>\n        <NavItem />\n        <ContactList />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import { SHOW_CONTACT } from \"../constants/action_type\";\r\nimport { CHANGE_CONTACT } from \"../constants/action_type\";\r\nimport { UPDATE_CONTACT } from \"../constants/action_type\";\r\nimport { LOAD_CONTACTS } from \"../constants/action_type\";\r\nimport { CLEAR_CONTACT } from \"../constants/action_type\";\r\nimport { SHOW_IMAGE } from \"../constants/action_type\";\r\n\r\nconst initialState = {\r\n  contacts: [],\r\n  showContactForm: false,\r\n  showDeleteButton: false,\r\n  imageUrl: \"\",\r\n  contact: { id: \"\", name: \"\", address: \"\", city: \"\", phone: \"\", email: \"\" }\r\n};\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n  let tempState = { ...state };\r\n\r\n  if (action.type === LOAD_CONTACTS) {\r\n    tempState.contacts = action.payload.contacts;\r\n    return tempState;\r\n  }\r\n\r\n  if (action.type === SHOW_CONTACT) {\r\n    tempState.contact = action.payload.contact;\r\n    tempState.imageUrl = `/file/${action.payload.contact.id}`;\r\n\r\n    return tempState;\r\n  }\r\n\r\n  if (action.type === SHOW_IMAGE) {\r\n    tempState.imageUrl = `/file/${action.payload.contactId}`;\r\n\r\n    return tempState;\r\n  }\r\n\r\n  if (action.type === CHANGE_CONTACT) {\r\n    tempState.contact = action.payload.contact;\r\n    tempState.contact[action.payload.field] = action.payload.value;\r\n    return tempState;\r\n  }\r\n\r\n  if (action.type === UPDATE_CONTACT) {\r\n    // tempState.contacts = action.payload.contacts;\r\n    // tempState.showContactForm = action.payload.showContactForm;\r\n    // return tempState;\r\n\r\n    var payload = action.payload;\r\n    var index_of_contact = payload.contacts.findIndex(data => data._id === payload.updated_contact._id);\r\n    tempState.contacts[index_of_contact] = payload.updated_contact;\r\n    tempState.showContactForm = action.payload.showContactForm;\r\n    return tempState;\r\n  }\r\n\r\n  if (action.type === CLEAR_CONTACT) {\r\n    tempState.contact = { id: \"\", name: \"\", address: \"\", city: \"\", phone: \"\", email: \"\" };\r\n    return tempState;\r\n  }\r\n\r\n  return tempState;\r\n}\r\n\r\nexport default rootReducer;\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"../reducers/reducer_index\";\r\n\r\nconst store = createStore(rootReducer);\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport * as actions from \"./../actions/action_index\";\r\nimport { connect } from \"react-redux\";\r\nimport NavItem from \"./NavItem\";\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    contact: state.contact,\r\n    imageUrl: state.imageUrl\r\n  };\r\n}\r\n\r\nclass EditContact extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      contact: {},\r\n      selectedFile: null\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(\"/contacts/\" + this.props.match.params.id).then(response => {\r\n      this.props.showContact({\r\n        contact: response.data\r\n      });\r\n    });\r\n  }\r\n\r\n  onChange = (field, value) => {\r\n    let currentContact = { ...this.props.contact };\r\n\r\n    this.props.changeContact({\r\n      contact: currentContact,\r\n      field: field,\r\n      value: value\r\n    });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, address, city, phone, email } = this.props.contact;\r\n\r\n    axios.put(\"/contacts/\" + this.props.contact.id, { name, address, city, phone, email }).then(result => {\r\n      this.props.clearContact();\r\n      this.props.history.push(\"/logo/\" + this.props.match.params.id);\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <section>\r\n        <NavItem />\r\n        <div className=\"container\">\r\n          <div className=\"panel panel-default\">\r\n            <div className=\"panel-heading\">\r\n              <h3 className=\"panel-title\">EDIT Contact</h3>\r\n            </div>\r\n            <div className=\"panel-body\">\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <label for=\"name\">Name:</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"name\"\r\n                    value={this.props.contact.name}\r\n                    onChange={event => this.onChange(\"name\", event.target.value)}\r\n                    placeholder=\"Name\"\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label for=\"title\">Address:</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"address\"\r\n                    value={this.props.contact.address}\r\n                    onChange={event => this.onChange(\"address\", event.target.value)}\r\n                    placeholder=\"Address\"\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label for=\"author\">City:</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"city\"\r\n                    value={this.props.contact.city}\r\n                    onChange={event => this.onChange(\"city\", event.target.value)}\r\n                    placeholder=\"City\"\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label for=\"published_date\">Phone Number:</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"phone\"\r\n                    value={this.props.contact.phone}\r\n                    onChange={event => this.onChange(\"phone\", event.target.value)}\r\n                    placeholder=\"Phone Number\"\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label for=\"description\">Email:</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    name=\"email\"\r\n                    value={this.props.contact.email}\r\n                    onChange={event => this.onChange(\"email\", event.target.value)}\r\n                    placeholder=\"Email Address\"\r\n                  />\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"btn btn-info\">\r\n                  Update\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(actions, dispatch);\r\n};\r\n\r\nconst Edit = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(EditContact);\r\nexport default Edit;\r\n","import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as actions from \"./../actions/action_index\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport NavItem from \"./NavItem\";\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    contact: state.contact\r\n  };\r\n}\r\n\r\nclass CreateContact extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.clearContact();\r\n  }\r\n  onChange = (field, value) => {\r\n    let currentContact = { ...this.props.contact };\r\n\r\n    this.props.changeContact({\r\n      contact: currentContact,\r\n      field: field,\r\n      value: value\r\n    });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { name, address, city, phone, email } = this.props.contact;\r\n\r\n    axios.post(\"/contacts\", { name, address, city, phone, email }).then(result => {\r\n      this.props.clearContact();\r\n      this.props.history.push(\"/\");\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, address, city, phone, email } = this.props.contact;\r\n    return (\r\n      <section>\r\n        <NavItem />\r\n        <div class=\"container\">\r\n          <div class=\"panel panel-default\">\r\n            <div class=\"panel-heading\">\r\n              <h3 class=\"panel-title\">ADD CONTACT</h3>\r\n            </div>\r\n            <div class=\"panel-body\">\r\n              <h4>\r\n                <Link to=\"/\">\r\n                  <span class=\"glyphicon glyphicon-th-list\" aria-hidden=\"true\" /> Contacts List\r\n                </Link>\r\n              </h4>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div class=\"form-group\">\r\n                  <label for=\"isbn\">Name:</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    class=\"form-control\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    onChange={event => this.onChange(\"name\", event.target.value)}\r\n                    placeholder=\"Name\"\r\n                  />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                  <label for=\"title\">Address:</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    class=\"form-control\"\r\n                    name=\"address\"\r\n                    value={address}\r\n                    onChange={event => this.onChange(\"address\", event.target.value)}\r\n                    placeholder=\"Address\"\r\n                  />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                  <label for=\"author\">City:</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    class=\"form-control\"\r\n                    name=\"city\"\r\n                    value={city}\r\n                    onChange={event => this.onChange(\"city\", event.target.value)}\r\n                    placeholder=\"City\"\r\n                  />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                  <label for=\"published_date\">Phone:</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    class=\"form-control\"\r\n                    name=\"phone\"\r\n                    value={phone}\r\n                    onChange={event => this.onChange(\"phone\", event.target.value)}\r\n                    placeholder=\"Phone Number\"\r\n                  />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                  <label for=\"publisher\">Email:</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    class=\"form-control\"\r\n                    name=\"email\"\r\n                    value={email}\r\n                    onChange={event => this.onChange(\"email\", event.target.value)}\r\n                    placeholder=\"Email Address\"\r\n                  />\r\n                </div>\r\n                <button type=\"submit\" class=\"btn btn-info\">\r\n                  Submit\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(actions, dispatch);\r\n};\r\n\r\nconst Create = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CreateContact);\r\n\r\nexport default Create;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport NavItem from \"./NavItem\";\r\nimport * as actions from \"./../actions/action_index\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { file } from \"@babel/types\";\r\nimport \"./../App.css\";\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    contact: state.contact,\r\n    imageUrl: state.imageUrl\r\n  };\r\n}\r\n\r\nclass ShowContact extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(\"/contacts/\" + this.props.match.params.id).then(response => {\r\n      let data = response.data;\r\n      let contact = {\r\n        id: data.id,\r\n        name: data.name,\r\n        address: data.address,\r\n        city: data.city,\r\n        phone: data.phone,\r\n        email: data.email,\r\n        contactImage: data.contactImage\r\n      };\r\n      this.props.showContact({\r\n        contact: contact\r\n      });\r\n    });\r\n  }\r\n\r\n  delete(id) {\r\n    console.log(id);\r\n    axios.delete(\"/contacts/\" + id).then(result => {\r\n      this.props.history.push(\"/\");\r\n    });\r\n  }\r\n\r\n  render() {\r\n    // let imageUrl = null;\r\n    // if (this.props.contact.id !== \"\") {\r\n    //   imageUrl = `/file/${this.props.contact.id}`;\r\n    // }\r\n    return (\r\n      <section>\r\n        <NavItem />\r\n        <div class=\"container\">\r\n          <div class=\"panel panel-default\">\r\n            <div class=\"panel-heading\">\r\n              <h3 class=\"panel-title\">Contact Details</h3>\r\n            </div>\r\n            <div class=\"panel-body\">\r\n              <dl>\r\n                <dd>\r\n                  {this.props.imageUrl && <img className=\"contact-image\" src={this.props.imageUrl} alt=\"contact\" />}\r\n                </dd>\r\n                <dt>Name:</dt>\r\n                <dd>{this.props.contact.name}</dd>\r\n                <dt>Address:</dt>\r\n                <dd>{this.props.contact.address}</dd>\r\n                <dt>City:</dt>\r\n                <dd>{this.props.contact.city}</dd>\r\n                <dt>Phone Number:</dt>\r\n                <dd>{this.props.contact.phone}</dd>\r\n                <dt>Email Address:</dt>\r\n                <dd>{this.props.contact.email}</dd>\r\n              </dl>\r\n              <Link to={`/edit/${this.props.contact.id}`} className=\"btn btn-success\">\r\n                Edit\r\n              </Link>\r\n              &nbsp;\r\n              <button onClick={this.delete.bind(this, this.props.contact.id)} className=\"btn btn-danger\">\r\n                Delete\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(actions, dispatch);\r\n};\r\nconst Show = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ShowContact);\r\nexport default Show;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport * as actions from \"./../actions/action_index\";\r\nimport { connect } from \"react-redux\";\r\nimport NavItem from \"./NavItem\";\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        contact: state.contact,\r\n        imageUrl: state.imageUrl\r\n    };\r\n}\r\n\r\nclass Logo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.showImage({\r\n            contactId: this.props.match.params.id\r\n        });\r\n    }\r\n\r\n    onChangeContactImage = event => {\r\n        const data = new FormData();\r\n        data.append(\"file\", event.target.files[0]);\r\n        let contactId = this.props.match.params.id;\r\n\r\n        axios.post(\"/contact/upload/\" + contactId, data, {}).then(response => {\r\n            this.props.history.push(\"/\");\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <NavItem />\r\n                <div className=\"container\">\r\n                    <div className=\"panel panel-default\">\r\n                        <div className=\"panel-heading\">\r\n                            <h3 className=\"panel-title\">Edit Contact Image</h3>\r\n                        </div>\r\n                        <div className=\"panel-body\">\r\n                            <form onSubmit={this.onSubmit} enctype=\"multipart/form-data\">\r\n                                <div className=\"form-group\">\r\n                                    {this.props.imageUrl && <img className=\"contact-image\" src={this.props.imageUrl} alt=\"contact\" />}\r\n                                    <input type=\"file\" name=\"file\" onChange={event => this.onChangeContactImage(event)} />\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return bindActionCreators(actions, dispatch);\r\n};\r\n\r\nconst ContactImage = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Logo);\r\nexport default ContactImage;\r\n","import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport axios from \"axios\";\r\nimport * as actions from \"../actions/action_index\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport NavItem from \"./NavItem\";\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    contact: state.contact\r\n  };\r\n}\r\n\r\nclass AddUsers extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.clearContact();\r\n  }\r\n  // onChange = (field, value) => {\r\n  //   let currentContact = { ...this.props.contact };\r\n\r\n  //   this.props.changeContact({\r\n  //     contact: currentContact,\r\n  //     field: field,\r\n  //     value: value\r\n  //   });\r\n  // };\r\n\r\n  onSubmit = () => {\r\n    const [username, password, role] = [\"test\", \"test\", \"user\"];\r\n\r\n    axios.post(\"/users\", { username, password, role }).then(result => {\r\n      this.props.history.push(\"/\");\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      // <section>\r\n      //   <NavItem />\r\n      //   <div class=\"container\">\r\n      //     <div class=\"panel panel-default\">\r\n      //       <div class=\"panel-heading\">\r\n      //         <h3 class=\"panel-title\">ADD CONTACT</h3>\r\n      //       </div>\r\n      //       <div class=\"panel-body\">\r\n      //         <h4>\r\n      //           <Link to=\"/\">\r\n      //             <span class=\"glyphicon glyphicon-th-list\" aria-hidden=\"true\" /> Contacts List\r\n      //           </Link>\r\n      //         </h4>\r\n      //         <form onSubmit={this.onSubmit}>\r\n      //           <div class=\"form-group\">\r\n      //             <label for=\"isbn\">Name:</label>\r\n      //             <input\r\n      //               type=\"text\"\r\n      //               class=\"form-control\"\r\n      //               name=\"name\"\r\n      //               value={name}\r\n      //               onChange={event => this.onChange(\"name\", event.target.value)}\r\n      //               placeholder=\"Name\"\r\n      //             />\r\n      //           </div>\r\n      //           <div class=\"form-group\">\r\n      //             <label for=\"title\">Address:</label>\r\n      //             <input\r\n      //               type=\"text\"\r\n      //               class=\"form-control\"\r\n      //               name=\"address\"\r\n      //               value={address}\r\n      //               onChange={event => this.onChange(\"address\", event.target.value)}\r\n      //               placeholder=\"Address\"\r\n      //             />\r\n      //           </div>\r\n      //           <div class=\"form-group\">\r\n      //             <label for=\"author\">City:</label>\r\n      //             <input\r\n      //               type=\"text\"\r\n      //               class=\"form-control\"\r\n      //               name=\"city\"\r\n      //               value={city}\r\n      //               onChange={event => this.onChange(\"city\", event.target.value)}\r\n      //               placeholder=\"City\"\r\n      //             />\r\n      //           </div>\r\n      //           <div class=\"form-group\">\r\n      //             <label for=\"published_date\">Phone:</label>\r\n      //             <input\r\n      //               type=\"text\"\r\n      //               class=\"form-control\"\r\n      //               name=\"phone\"\r\n      //               value={phone}\r\n      //               onChange={event => this.onChange(\"phone\", event.target.value)}\r\n      //               placeholder=\"Phone Number\"\r\n      //             />\r\n      //           </div>\r\n      //           <div class=\"form-group\">\r\n      //             <label for=\"publisher\">Email:</label>\r\n      //             <input\r\n      //               type=\"email\"\r\n      //               class=\"form-control\"\r\n      //               name=\"email\"\r\n      //               value={email}\r\n      //               onChange={event => this.onChange(\"email\", event.target.value)}\r\n      //               placeholder=\"Email Address\"\r\n      //             />\r\n      //           </div>\r\n      //           <button type=\"submit\" class=\"btn btn-info\">\r\n      //             Submit\r\n      //           </button>\r\n      //         </form>\r\n      //       </div>\r\n      //     </div>\r\n      //   </div>\r\n      // </section>\r\n      <section>\r\n        <NavItem />\r\n        <button type=\"button\" class=\"btn btn-info\" onClick={() => this.onSubmit()}>\r\n          Add User\r\n        </button>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(actions, dispatch);\r\n};\r\n\r\nconst Users = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AddUsers);\r\n\r\nexport default Users;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\nimport \"./App.css\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store_index\";\n\nimport Edit from \"./components/Edit\";\nimport Create from \"./components/Create\";\nimport Show from \"./components/Show\";\nimport ContactImage from \"./components/ContactImage\";\nimport Users from \"./components/Users\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <div>\n        <Switch>\n          <Route exact path=\"/\" component={App} />\n          <Route path=\"/edit/:id\" render={props => <Edit {...props} />} />\n          <Route path=\"/create\" component={Create} />\n          <Route path=\"/show/:id\" component={Show} />\n          <Route path=\"/logo/:id\" component={ContactImage} />\n          <Route path=\"/users\" component={Users} />\n        </Switch>\n      </div>\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}